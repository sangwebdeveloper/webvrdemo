{"version":3,"sources":["webpack:///./~/reflect-metadata/Reflect.js?a99d","webpack:///./~/reflect-metadata/Reflect.js","webpack:///./~/zone.js/dist/zone.js","webpack:///./~/script-loader/addScript.js","webpack:///./~/zone.js/dist/zone.js?0979"],"names":[],"mappings":"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","file":"scripts.bundle.js","sourcesContent":["require(\"!!/www/sites/videogular2-starter/node_modules/script-loader/addScript.js\")(require(\"!!/www/sites/videogular2-starter/node_modules/raw-loader/index.js!/www/sites/videogular2-starter/node_modules/reflect-metadata/Reflect.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/reflect-metadata/Reflect.js\n// module id = 130\n// module chunks = 2 3","module.exports = \"/*! *****************************************************************************\\r\\nCopyright (C) Microsoft. All rights reserved.\\r\\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\r\\nthis file except in compliance with the License. You may obtain a copy of the\\r\\nLicense at http://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\r\\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\\r\\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\\r\\nMERCHANTABLITY OR NON-INFRINGEMENT.\\r\\n\\r\\nSee the Apache Version 2.0 License for specific language governing permissions\\r\\nand limitations under the License.\\r\\n***************************************************************************** */\\r\\nvar Reflect;\\r\\n(function (Reflect) {\\r\\n    \\\"use strict\\\";\\r\\n    var hasOwn = Object.prototype.hasOwnProperty;\\r\\n    // feature test for Object.create support\\r\\n    var supportsCreate = typeof Object.create === \\\"function\\\";\\r\\n    // feature test for __proto__ support\\r\\n    var supportsProto = { __proto__: [] } instanceof Array;\\r\\n    // feature test for Symbol support\\r\\n    var supportsSymbol = typeof Symbol === \\\"function\\\";\\r\\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \\\"undefined\\\" ? Symbol.toPrimitive : \\\"@@toPrimitive\\\";\\r\\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \\\"undefined\\\" ? Symbol.iterator : \\\"@@iterator\\\";\\r\\n    // create an object in dictionary mode (a.k.a. \\\"slow\\\" mode in v8)\\r\\n    var createDictionary = supportsCreate ? function () { return MakeDictionary(Object.create(null)); } :\\r\\n        supportsProto ? function () { return MakeDictionary({ __proto__: null }); } :\\r\\n            function () { return MakeDictionary({}); };\\r\\n    var HashMap;\\r\\n    (function (HashMap) {\\r\\n        var downLevel = !supportsCreate && !supportsProto;\\r\\n        HashMap.has = downLevel\\r\\n            ? function (map, key) { return hasOwn.call(map, key); }\\r\\n            : function (map, key) { return key in map; };\\r\\n        HashMap.get = downLevel\\r\\n            ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\\r\\n            : function (map, key) { return map[key]; };\\r\\n    })(HashMap || (HashMap = {}));\\r\\n    // Load global or shim versions of Map, Set, and WeakMap\\r\\n    var functionPrototype = Object.getPrototypeOf(Function);\\r\\n    var _Map = typeof Map === \\\"function\\\" && typeof Map.prototype.entries === \\\"function\\\" ? Map : CreateMapPolyfill();\\r\\n    var _Set = typeof Set === \\\"function\\\" && typeof Set.prototype.entries === \\\"function\\\" ? Set : CreateSetPolyfill();\\r\\n    var _WeakMap = typeof WeakMap === \\\"function\\\" ? WeakMap : CreateWeakMapPolyfill();\\r\\n    // [[Metadata]] internal slot\\r\\n    var Metadata = new _WeakMap();\\r\\n    /**\\r\\n      * Applies a set of decorators to a property of a target object.\\r\\n      * @param decorators An array of decorators.\\r\\n      * @param target The target object.\\r\\n      * @param targetKey (Optional) The property key to decorate.\\r\\n      * @param targetDescriptor (Optional) The property descriptor for the target key\\r\\n      * @remarks Decorators are applied in reverse order.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     Example = Reflect.decorate(decoratorsArray, Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     Reflect.decorate(decoratorsArray, Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     Object.defineProperty(Example, \\\"staticMethod\\\",\\r\\n      *         Reflect.decorate(decoratorsArray, Example, \\\"staticMethod\\\",\\r\\n      *             Object.getOwnPropertyDescriptor(Example, \\\"staticMethod\\\")));\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     Object.defineProperty(Example.prototype, \\\"method\\\",\\r\\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \\\"method\\\",\\r\\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \\\"method\\\")));\\r\\n      *\\r\\n      */\\r\\n    function decorate(decorators, target, targetKey, targetDescriptor) {\\r\\n        if (!IsUndefined(targetKey)) {\\r\\n            if (!IsArray(decorators))\\r\\n                throw new TypeError();\\r\\n            if (!IsObject(target))\\r\\n                throw new TypeError();\\r\\n            if (!IsObject(targetDescriptor) && !IsUndefined(targetDescriptor) && !IsNull(targetDescriptor))\\r\\n                throw new TypeError();\\r\\n            if (IsNull(targetDescriptor))\\r\\n                targetDescriptor = undefined;\\r\\n            targetKey = ToPropertyKey(targetKey);\\r\\n            return DecorateProperty(decorators, target, targetKey, targetDescriptor);\\r\\n        }\\r\\n        else {\\r\\n            if (!IsArray(decorators))\\r\\n                throw new TypeError();\\r\\n            if (!IsConstructor(target))\\r\\n                throw new TypeError();\\r\\n            return DecorateConstructor(decorators, target);\\r\\n        }\\r\\n    }\\r\\n    Reflect.decorate = decorate;\\r\\n    /**\\r\\n      * A default metadata decorator factory that can be used on a class, class member, or parameter.\\r\\n      * @param metadataKey The key for the metadata entry.\\r\\n      * @param metadataValue The value for the metadata entry.\\r\\n      * @returns A decorator function.\\r\\n      * @remarks\\r\\n      * If `metadataKey` is already defined for the target and target key, the\\r\\n      * metadataValue for that key will be overwritten.\\r\\n      * @example\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     @Reflect.metadata(key, value)\\r\\n      *     class Example {\\r\\n      *     }\\r\\n      *\\r\\n      *     // property (on constructor, TypeScript only)\\r\\n      *     class Example {\\r\\n      *         @Reflect.metadata(key, value)\\r\\n      *         static staticProperty;\\r\\n      *     }\\r\\n      *\\r\\n      *     // property (on prototype, TypeScript only)\\r\\n      *     class Example {\\r\\n      *         @Reflect.metadata(key, value)\\r\\n      *         property;\\r\\n      *     }\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     class Example {\\r\\n      *         @Reflect.metadata(key, value)\\r\\n      *         static staticMethod() { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     class Example {\\r\\n      *         @Reflect.metadata(key, value)\\r\\n      *         method() { }\\r\\n      *     }\\r\\n      *\\r\\n      */\\r\\n    function metadata(metadataKey, metadataValue) {\\r\\n        function decorator(target, targetKey) {\\r\\n            if (!IsUndefined(targetKey)) {\\r\\n                if (!IsObject(target))\\r\\n                    throw new TypeError();\\r\\n                targetKey = ToPropertyKey(targetKey);\\r\\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\\r\\n            }\\r\\n            else {\\r\\n                if (!IsConstructor(target))\\r\\n                    throw new TypeError();\\r\\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, /*targetKey*/ undefined);\\r\\n            }\\r\\n        }\\r\\n        return decorator;\\r\\n    }\\r\\n    Reflect.metadata = metadata;\\r\\n    /**\\r\\n      * Define a unique metadata entry on the target.\\r\\n      * @param metadataKey A key used to store and retrieve metadata.\\r\\n      * @param metadataValue A value that contains attached metadata.\\r\\n      * @param target The target object on which to define metadata.\\r\\n      * @param targetKey (Optional) The property key for the target.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     Reflect.defineMetadata(\\\"custom:annotation\\\", options, Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     Reflect.defineMetadata(\\\"custom:annotation\\\", options, Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     Reflect.defineMetadata(\\\"custom:annotation\\\", options, Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     Reflect.defineMetadata(\\\"custom:annotation\\\", options, Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     Reflect.defineMetadata(\\\"custom:annotation\\\", options, Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      *     // decorator factory as metadata-producing annotation.\\r\\n      *     function MyAnnotation(options): Decorator {\\r\\n      *         return (target, key?) => Reflect.defineMetadata(\\\"custom:annotation\\\", options, target, key);\\r\\n      *     }\\r\\n      *\\r\\n      */\\r\\n    function defineMetadata(metadataKey, metadataValue, target, targetKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(targetKey))\\r\\n            targetKey = ToPropertyKey(targetKey);\\r\\n        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\\r\\n    }\\r\\n    Reflect.defineMetadata = defineMetadata;\\r\\n    /**\\r\\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\\r\\n      * @param metadataKey A key used to store and retrieve metadata.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param targetKey (Optional) The property key for the target.\\r\\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.hasMetadata(\\\"custom:annotation\\\", Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.hasMetadata(\\\"custom:annotation\\\", Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.hasMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.hasMetadata(\\\"custom:annotation\\\", Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.hasMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function hasMetadata(metadataKey, target, targetKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(targetKey))\\r\\n            targetKey = ToPropertyKey(targetKey);\\r\\n        return OrdinaryHasMetadata(metadataKey, target, targetKey);\\r\\n    }\\r\\n    Reflect.hasMetadata = hasMetadata;\\r\\n    /**\\r\\n      * Gets a value indicating whether the target object has the provided metadata key defined.\\r\\n      * @param metadataKey A key used to store and retrieve metadata.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param targetKey (Optional) The property key for the target.\\r\\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.hasOwnMetadata(\\\"custom:annotation\\\", Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.hasOwnMetadata(\\\"custom:annotation\\\", Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.hasOwnMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.hasOwnMetadata(\\\"custom:annotation\\\", Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.hasOwnMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function hasOwnMetadata(metadataKey, target, targetKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(targetKey))\\r\\n            targetKey = ToPropertyKey(targetKey);\\r\\n        return OrdinaryHasOwnMetadata(metadataKey, target, targetKey);\\r\\n    }\\r\\n    Reflect.hasOwnMetadata = hasOwnMetadata;\\r\\n    /**\\r\\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\\r\\n      * @param metadataKey A key used to store and retrieve metadata.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param targetKey (Optional) The property key for the target.\\r\\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.getMetadata(\\\"custom:annotation\\\", Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.getMetadata(\\\"custom:annotation\\\", Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.getMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.getMetadata(\\\"custom:annotation\\\", Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.getMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function getMetadata(metadataKey, target, targetKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(targetKey))\\r\\n            targetKey = ToPropertyKey(targetKey);\\r\\n        return OrdinaryGetMetadata(metadataKey, target, targetKey);\\r\\n    }\\r\\n    Reflect.getMetadata = getMetadata;\\r\\n    /**\\r\\n      * Gets the metadata value for the provided metadata key on the target object.\\r\\n      * @param metadataKey A key used to store and retrieve metadata.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param targetKey (Optional) The property key for the target.\\r\\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.getOwnMetadata(\\\"custom:annotation\\\", Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.getOwnMetadata(\\\"custom:annotation\\\", Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.getOwnMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.getOwnMetadata(\\\"custom:annotation\\\", Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.getOwnMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function getOwnMetadata(metadataKey, target, targetKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(targetKey))\\r\\n            targetKey = ToPropertyKey(targetKey);\\r\\n        return OrdinaryGetOwnMetadata(metadataKey, target, targetKey);\\r\\n    }\\r\\n    Reflect.getOwnMetadata = getOwnMetadata;\\r\\n    /**\\r\\n      * Gets the metadata keys defined on the target object or its prototype chain.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param targetKey (Optional) The property key for the target.\\r\\n      * @returns An array of unique metadata keys.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.getMetadataKeys(Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.getMetadataKeys(Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.getMetadataKeys(Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.getMetadataKeys(Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.getMetadataKeys(Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function getMetadataKeys(target, targetKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(targetKey))\\r\\n            targetKey = ToPropertyKey(targetKey);\\r\\n        return OrdinaryMetadataKeys(target, targetKey);\\r\\n    }\\r\\n    Reflect.getMetadataKeys = getMetadataKeys;\\r\\n    /**\\r\\n      * Gets the unique metadata keys defined on the target object.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param targetKey (Optional) The property key for the target.\\r\\n      * @returns An array of unique metadata keys.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.getOwnMetadataKeys(Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.getOwnMetadataKeys(Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.getOwnMetadataKeys(Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function getOwnMetadataKeys(target, targetKey) {\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(targetKey))\\r\\n            targetKey = ToPropertyKey(targetKey);\\r\\n        return OrdinaryOwnMetadataKeys(target, targetKey);\\r\\n    }\\r\\n    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;\\r\\n    /**\\r\\n      * Deletes the metadata entry from the target object with the provided key.\\r\\n      * @param metadataKey A key used to store and retrieve metadata.\\r\\n      * @param target The target object on which the metadata is defined.\\r\\n      * @param targetKey (Optional) The property key for the target.\\r\\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\\r\\n      * @example\\r\\n      *\\r\\n      *     class Example {\\r\\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\\r\\n      *         // static staticProperty;\\r\\n      *         // property;\\r\\n      *\\r\\n      *         constructor(p) { }\\r\\n      *         static staticMethod(p) { }\\r\\n      *         method(p) { }\\r\\n      *     }\\r\\n      *\\r\\n      *     // constructor\\r\\n      *     result = Reflect.deleteMetadata(\\\"custom:annotation\\\", Example);\\r\\n      *\\r\\n      *     // property (on constructor)\\r\\n      *     result = Reflect.deleteMetadata(\\\"custom:annotation\\\", Example, \\\"staticProperty\\\");\\r\\n      *\\r\\n      *     // property (on prototype)\\r\\n      *     result = Reflect.deleteMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"property\\\");\\r\\n      *\\r\\n      *     // method (on constructor)\\r\\n      *     result = Reflect.deleteMetadata(\\\"custom:annotation\\\", Example, \\\"staticMethod\\\");\\r\\n      *\\r\\n      *     // method (on prototype)\\r\\n      *     result = Reflect.deleteMetadata(\\\"custom:annotation\\\", Example.prototype, \\\"method\\\");\\r\\n      *\\r\\n      */\\r\\n    function deleteMetadata(metadataKey, target, targetKey) {\\r\\n        // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#deletemetadata-metadatakey-p-\\r\\n        if (!IsObject(target))\\r\\n            throw new TypeError();\\r\\n        if (!IsUndefined(targetKey))\\r\\n            targetKey = ToPropertyKey(targetKey);\\r\\n        var metadataMap = GetOrCreateMetadataMap(target, targetKey, /*create*/ false);\\r\\n        if (IsUndefined(metadataMap))\\r\\n            return false;\\r\\n        if (!metadataMap.delete(metadataKey))\\r\\n            return false;\\r\\n        if (metadataMap.size > 0)\\r\\n            return true;\\r\\n        var targetMetadata = Metadata.get(target);\\r\\n        targetMetadata.delete(targetKey);\\r\\n        if (targetMetadata.size > 0)\\r\\n            return true;\\r\\n        Metadata.delete(target);\\r\\n        return true;\\r\\n    }\\r\\n    Reflect.deleteMetadata = deleteMetadata;\\r\\n    function DecorateConstructor(decorators, target) {\\r\\n        for (var i = decorators.length - 1; i >= 0; --i) {\\r\\n            var decorator = decorators[i];\\r\\n            var decorated = decorator(target);\\r\\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\\r\\n                if (!IsConstructor(decorated))\\r\\n                    throw new TypeError();\\r\\n                target = decorated;\\r\\n            }\\r\\n        }\\r\\n        return target;\\r\\n    }\\r\\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\\r\\n        for (var i = decorators.length - 1; i >= 0; --i) {\\r\\n            var decorator = decorators[i];\\r\\n            var decorated = decorator(target, propertyKey, descriptor);\\r\\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\\r\\n                if (!IsObject(decorated))\\r\\n                    throw new TypeError();\\r\\n                descriptor = decorated;\\r\\n            }\\r\\n        }\\r\\n        return descriptor;\\r\\n    }\\r\\n    function GetOrCreateMetadataMap(O, P, Create) {\\r\\n        var targetMetadata = Metadata.get(O);\\r\\n        if (IsUndefined(targetMetadata)) {\\r\\n            if (!Create)\\r\\n                return undefined;\\r\\n            targetMetadata = new _Map();\\r\\n            Metadata.set(O, targetMetadata);\\r\\n        }\\r\\n        var metadataMap = targetMetadata.get(P);\\r\\n        if (IsUndefined(metadataMap)) {\\r\\n            if (!Create)\\r\\n                return undefined;\\r\\n            metadataMap = new _Map();\\r\\n            targetMetadata.set(P, metadataMap);\\r\\n        }\\r\\n        return metadataMap;\\r\\n    }\\r\\n    // Ordinary Object Internal Methods and Internal Slots\\r\\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinary-object-internal-methods-and-internal-slots\\r\\n    // OrdinaryHasMetadata(MetadataKey, O, P)\\r\\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinaryhasmetadata--metadatakey-o-p-\\r\\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\\r\\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\\r\\n        if (hasOwn)\\r\\n            return true;\\r\\n        var parent = OrdinaryGetPrototypeOf(O);\\r\\n        if (!IsNull(parent))\\r\\n            return OrdinaryHasMetadata(MetadataKey, parent, P);\\r\\n        return false;\\r\\n    }\\r\\n    // OrdinaryHasOwnMetadata(MetadataKey, O, P)\\r\\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinaryhasownmetadata--metadatakey-o-p-\\r\\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\\r\\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ false);\\r\\n        if (IsUndefined(metadataMap))\\r\\n            return false;\\r\\n        return ToBoolean(metadataMap.has(MetadataKey));\\r\\n    }\\r\\n    // OrdinaryGetMetadata(MetadataKey, O, P)\\r\\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinarygetmetadata--metadatakey-o-p-\\r\\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\\r\\n        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\\r\\n        if (hasOwn)\\r\\n            return OrdinaryGetOwnMetadata(MetadataKey, O, P);\\r\\n        var parent = OrdinaryGetPrototypeOf(O);\\r\\n        if (!IsNull(parent))\\r\\n            return OrdinaryGetMetadata(MetadataKey, parent, P);\\r\\n        return undefined;\\r\\n    }\\r\\n    // OrdinaryGetOwnMetadata(MetadataKey, O, P)\\r\\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinarygetownmetadata--metadatakey-o-p-\\r\\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\\r\\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ false);\\r\\n        if (IsUndefined(metadataMap))\\r\\n            return undefined;\\r\\n        return metadataMap.get(MetadataKey);\\r\\n    }\\r\\n    // OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\\r\\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinarydefineownmetadata--metadatakey-metadatavalue-o-p-\\r\\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\\r\\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ true);\\r\\n        metadataMap.set(MetadataKey, MetadataValue);\\r\\n    }\\r\\n    // OrdinaryMetadataKeys(O, P)\\r\\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinarymetadatakeys--o-p-\\r\\n    function OrdinaryMetadataKeys(O, P) {\\r\\n        var ownKeys = OrdinaryOwnMetadataKeys(O, P);\\r\\n        var parent = OrdinaryGetPrototypeOf(O);\\r\\n        if (parent === null)\\r\\n            return ownKeys;\\r\\n        var parentKeys = OrdinaryMetadataKeys(parent, P);\\r\\n        if (parentKeys.length <= 0)\\r\\n            return ownKeys;\\r\\n        if (ownKeys.length <= 0)\\r\\n            return parentKeys;\\r\\n        var set = new _Set();\\r\\n        var keys = [];\\r\\n        for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\\r\\n            var key = ownKeys_1[_i];\\r\\n            var hasKey = set.has(key);\\r\\n            if (!hasKey) {\\r\\n                set.add(key);\\r\\n                keys.push(key);\\r\\n            }\\r\\n        }\\r\\n        for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\\r\\n            var key = parentKeys_1[_a];\\r\\n            var hasKey = set.has(key);\\r\\n            if (!hasKey) {\\r\\n                set.add(key);\\r\\n                keys.push(key);\\r\\n            }\\r\\n        }\\r\\n        return keys;\\r\\n    }\\r\\n    // OrdinaryOwnMetadataKeys(O, P)\\r\\n    // https://github.com/rbuckton/ReflectDecorators/blob/master/spec/metadata.md#ordinaryownmetadatakeys--o-p-\\r\\n    function OrdinaryOwnMetadataKeys(O, P) {\\r\\n        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ false);\\r\\n        var keys = [];\\r\\n        if (IsUndefined(metadataMap))\\r\\n            return keys;\\r\\n        var keysObj = metadataMap.keys();\\r\\n        var iterator = GetIterator(keysObj);\\r\\n        while (true) {\\r\\n            var next = IteratorStep(iterator);\\r\\n            try {\\r\\n                if (!next)\\r\\n                    return keys;\\r\\n                var nextValue = IteratorValue(next);\\r\\n                keys.push(nextValue);\\r\\n            }\\r\\n            catch (e) {\\r\\n                try {\\r\\n                    if (next) {\\r\\n                        next = false;\\r\\n                        IteratorClose(iterator);\\r\\n                    }\\r\\n                }\\r\\n                finally {\\r\\n                    throw e;\\r\\n                }\\r\\n            }\\r\\n            finally {\\r\\n                if (next)\\r\\n                    IteratorClose(iterator);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    // ECMAScript Specification\\r\\n    // https://tc39.github.io/ecma262/\\r\\n    // 6 ECMAScript Data Typ0es and Values\\r\\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\\r\\n    function Type(x) {\\r\\n        if (x === null)\\r\\n            return 1 /* Null */;\\r\\n        switch (typeof x) {\\r\\n            case \\\"undefined\\\": return 0 /* Undefined */;\\r\\n            case \\\"boolean\\\": return 2 /* Boolean */;\\r\\n            case \\\"string\\\": return 3 /* String */;\\r\\n            case \\\"symbol\\\": return 4 /* Symbol */;\\r\\n            case \\\"number\\\": return 5 /* Number */;\\r\\n            case \\\"object\\\": return x === null ? 1 /* Null */ : 6 /* Object */;\\r\\n            default: return 6 /* Object */;\\r\\n        }\\r\\n    }\\r\\n    // 6.1.1 The Undefined Type\\r\\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\\r\\n    function IsUndefined(x) {\\r\\n        return x === undefined;\\r\\n    }\\r\\n    // 6.1.2 The Null Type\\r\\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\\r\\n    function IsNull(x) {\\r\\n        return x === null;\\r\\n    }\\r\\n    // 6.1.5 The Symbol Type\\r\\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\\r\\n    function IsSymbol(x) {\\r\\n        return typeof x === \\\"symbol\\\";\\r\\n    }\\r\\n    // 6.1.7 The Object Type\\r\\n    // https://tc39.github.io/ecma262/#sec-object-type\\r\\n    function IsObject(x) {\\r\\n        return typeof x === \\\"object\\\" ? x !== null : typeof x === \\\"function\\\";\\r\\n    }\\r\\n    // 7.1 Type Conversion\\r\\n    // https://tc39.github.io/ecma262/#sec-type-conversion\\r\\n    // 7.1.1 ToPrimitive(input [, PreferredType])\\r\\n    // https://tc39.github.io/ecma262/#sec-toprimitive\\r\\n    function ToPrimitive(input, PreferredType) {\\r\\n        switch (Type(input)) {\\r\\n            case 0 /* Undefined */: return input;\\r\\n            case 1 /* Null */: return input;\\r\\n            case 2 /* Boolean */: return input;\\r\\n            case 3 /* String */: return input;\\r\\n            case 4 /* Symbol */: return input;\\r\\n            case 5 /* Number */: return input;\\r\\n        }\\r\\n        var hint = PreferredType === 3 /* String */ ? \\\"string\\\" : PreferredType === 5 /* Number */ ? \\\"number\\\" : \\\"default\\\";\\r\\n        var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\\r\\n        if (exoticToPrim !== undefined) {\\r\\n            var result = exoticToPrim.call(input, hint);\\r\\n            if (IsObject(result))\\r\\n                throw new TypeError();\\r\\n            return result;\\r\\n        }\\r\\n        return OrdinaryToPrimitive(input, hint === \\\"default\\\" ? \\\"number\\\" : hint);\\r\\n    }\\r\\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\\r\\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\\r\\n    function OrdinaryToPrimitive(O, hint) {\\r\\n        if (hint === \\\"string\\\") {\\r\\n            var toString_1 = O.toString;\\r\\n            if (IsCallable(toString_1)) {\\r\\n                var result = toString_1.call(O);\\r\\n                if (!IsObject(result))\\r\\n                    return result;\\r\\n            }\\r\\n            var valueOf = O.valueOf;\\r\\n            if (IsCallable(valueOf)) {\\r\\n                var result = valueOf.call(O);\\r\\n                if (!IsObject(result))\\r\\n                    return result;\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            var valueOf = O.valueOf;\\r\\n            if (IsCallable(valueOf)) {\\r\\n                var result = valueOf.call(O);\\r\\n                if (!IsObject(result))\\r\\n                    return result;\\r\\n            }\\r\\n            var toString_2 = O.toString;\\r\\n            if (IsCallable(toString_2)) {\\r\\n                var result = toString_2.call(O);\\r\\n                if (!IsObject(result))\\r\\n                    return result;\\r\\n            }\\r\\n        }\\r\\n        throw new TypeError();\\r\\n    }\\r\\n    // 7.1.2 ToBoolean(argument)\\r\\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\\r\\n    function ToBoolean(argument) {\\r\\n        return !!argument;\\r\\n    }\\r\\n    // 7.1.12 ToString(argument)\\r\\n    // https://tc39.github.io/ecma262/#sec-tostring\\r\\n    function ToString(argument) {\\r\\n        return \\\"\\\" + argument;\\r\\n    }\\r\\n    // 7.1.14 ToPropertyKey(argument)\\r\\n    // https://tc39.github.io/ecma262/#sec-topropertykey\\r\\n    function ToPropertyKey(argument) {\\r\\n        var key = ToPrimitive(argument, 3 /* String */);\\r\\n        if (IsSymbol(key))\\r\\n            return key;\\r\\n        return ToString(key);\\r\\n    }\\r\\n    // 7.2 Testing and Comparison Operations\\r\\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\\r\\n    // 7.2.2 IsArray(argument)\\r\\n    // https://tc39.github.io/ecma262/#sec-isarray\\r\\n    function IsArray(argument) {\\r\\n        return Array.isArray\\r\\n            ? Array.isArray(argument)\\r\\n            : argument instanceof Object\\r\\n                ? argument instanceof Array\\r\\n                : Object.prototype.toString.call(argument) === \\\"[object Array]\\\";\\r\\n    }\\r\\n    // 7.2.3 IsCallable(argument)\\r\\n    // https://tc39.github.io/ecma262/#sec-iscallable\\r\\n    function IsCallable(argument) {\\r\\n        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\\r\\n        return typeof argument === \\\"function\\\";\\r\\n    }\\r\\n    // 7.2.4 IsConstructor(argument)\\r\\n    // https://tc39.github.io/ecma262/#sec-isconstructor\\r\\n    function IsConstructor(argument) {\\r\\n        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\\r\\n        return typeof argument === \\\"function\\\";\\r\\n    }\\r\\n    // 7.3 Operations on Objects\\r\\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\\r\\n    // 7.3.9 GetMethod(V, P)\\r\\n    // https://tc39.github.io/ecma262/#sec-getmethod\\r\\n    function GetMethod(V, P) {\\r\\n        var func = V[P];\\r\\n        if (func === undefined || func === null)\\r\\n            return undefined;\\r\\n        if (!IsCallable(func))\\r\\n            throw new TypeError();\\r\\n        return func;\\r\\n    }\\r\\n    // 7.4 Operations on Iterator Objects\\r\\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\\r\\n    function GetIterator(obj) {\\r\\n        var method = GetMethod(obj, iteratorSymbol);\\r\\n        if (!IsCallable(method))\\r\\n            throw new TypeError(); // from Call\\r\\n        var iterator = method.call(obj);\\r\\n        if (!IsObject(iterator))\\r\\n            throw new TypeError();\\r\\n        return iterator;\\r\\n    }\\r\\n    // 7.4.4 IteratorValue(iterResult)\\r\\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\\r\\n    function IteratorValue(iterResult) {\\r\\n        return iterResult.value;\\r\\n    }\\r\\n    // 7.4.5 IteratorStep(iterator)\\r\\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\\r\\n    function IteratorStep(iterator) {\\r\\n        var result = iterator.next();\\r\\n        return result.done ? false : result;\\r\\n    }\\r\\n    // 7.4.6 IteratorClose(iterator, completion)\\r\\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\\r\\n    function IteratorClose(iterator) {\\r\\n        var f = iterator[\\\"return\\\"];\\r\\n        if (f)\\r\\n            f.call(iterator);\\r\\n    }\\r\\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\\r\\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\\r\\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\\r\\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\\r\\n    function OrdinaryGetPrototypeOf(O) {\\r\\n        var proto = Object.getPrototypeOf(O);\\r\\n        if (typeof O !== \\\"function\\\" || O === functionPrototype)\\r\\n            return proto;\\r\\n        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\\r\\n        // Try to determine the superclass constructor. Compatible implementations\\r\\n        // must either set __proto__ on a subclass constructor to the superclass constructor,\\r\\n        // or ensure each class has a valid `constructor` property on its prototype that\\r\\n        // points back to the constructor.\\r\\n        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\\r\\n        // This is the case when in ES6 or when using __proto__ in a compatible browser.\\r\\n        if (proto !== functionPrototype)\\r\\n            return proto;\\r\\n        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\\r\\n        var prototype = O.prototype;\\r\\n        var prototypeProto = prototype && Object.getPrototypeOf(prototype);\\r\\n        if (prototypeProto == null || prototypeProto === Object.prototype)\\r\\n            return proto;\\r\\n        // If the constructor was not a function, then we cannot determine the heritage.\\r\\n        var constructor = prototypeProto.constructor;\\r\\n        if (typeof constructor !== \\\"function\\\")\\r\\n            return proto;\\r\\n        // If we have some kind of self-reference, then we cannot determine the heritage.\\r\\n        if (constructor === O)\\r\\n            return proto;\\r\\n        // we have a pretty good guess at the heritage.\\r\\n        return constructor;\\r\\n    }\\r\\n    // naive Map shim\\r\\n    function CreateMapPolyfill() {\\r\\n        var cacheSentinel = {};\\r\\n        var arraySentinel = [];\\r\\n        var MapIterator = (function () {\\r\\n            function MapIterator(keys, values, selector) {\\r\\n                this._index = 0;\\r\\n                this._keys = keys;\\r\\n                this._values = values;\\r\\n                this._selector = selector;\\r\\n            }\\r\\n            MapIterator.prototype[\\\"@@iterator\\\"] = function () { return this; };\\r\\n            MapIterator.prototype[iteratorSymbol] = function () { return this; };\\r\\n            MapIterator.prototype.next = function () {\\r\\n                var index = this._index;\\r\\n                if (index >= 0 && index < this._keys.length) {\\r\\n                    var result = this._selector(this._keys[index], this._values[index]);\\r\\n                    if (index + 1 >= this._keys.length) {\\r\\n                        this._index = -1;\\r\\n                        this._keys = arraySentinel;\\r\\n                        this._values = arraySentinel;\\r\\n                    }\\r\\n                    else {\\r\\n                        this._index++;\\r\\n                    }\\r\\n                    return { value: result, done: false };\\r\\n                }\\r\\n                return { value: undefined, done: true };\\r\\n            };\\r\\n            MapIterator.prototype.throw = function (error) {\\r\\n                if (this._index >= 0) {\\r\\n                    this._index = -1;\\r\\n                    this._keys = arraySentinel;\\r\\n                    this._values = arraySentinel;\\r\\n                }\\r\\n                throw error;\\r\\n            };\\r\\n            MapIterator.prototype.return = function (value) {\\r\\n                if (this._index >= 0) {\\r\\n                    this._index = -1;\\r\\n                    this._keys = arraySentinel;\\r\\n                    this._values = arraySentinel;\\r\\n                }\\r\\n                return { value: value, done: true };\\r\\n            };\\r\\n            return MapIterator;\\r\\n        }());\\r\\n        return (function () {\\r\\n            function Map() {\\r\\n                this._keys = [];\\r\\n                this._values = [];\\r\\n                this._cacheKey = cacheSentinel;\\r\\n                this._cacheIndex = -2;\\r\\n            }\\r\\n            Object.defineProperty(Map.prototype, \\\"size\\\", {\\r\\n                get: function () { return this._keys.length; },\\r\\n                enumerable: true,\\r\\n                configurable: true\\r\\n            });\\r\\n            Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\\r\\n            Map.prototype.get = function (key) {\\r\\n                var index = this._find(key, /*insert*/ false);\\r\\n                return index >= 0 ? this._values[index] : undefined;\\r\\n            };\\r\\n            Map.prototype.set = function (key, value) {\\r\\n                var index = this._find(key, /*insert*/ true);\\r\\n                this._values[index] = value;\\r\\n                return this;\\r\\n            };\\r\\n            Map.prototype.delete = function (key) {\\r\\n                var index = this._find(key, /*insert*/ false);\\r\\n                if (index >= 0) {\\r\\n                    var size = this._keys.length;\\r\\n                    for (var i = index + 1; i < size; i++) {\\r\\n                        this._keys[i - 1] = this._keys[i];\\r\\n                        this._values[i - 1] = this._values[i];\\r\\n                    }\\r\\n                    this._keys.length--;\\r\\n                    this._values.length--;\\r\\n                    if (key === this._cacheKey) {\\r\\n                        this._cacheKey = cacheSentinel;\\r\\n                        this._cacheIndex = -2;\\r\\n                    }\\r\\n                    return true;\\r\\n                }\\r\\n                return false;\\r\\n            };\\r\\n            Map.prototype.clear = function () {\\r\\n                this._keys.length = 0;\\r\\n                this._values.length = 0;\\r\\n                this._cacheKey = cacheSentinel;\\r\\n                this._cacheIndex = -2;\\r\\n            };\\r\\n            Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\\r\\n            Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\\r\\n            Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\\r\\n            Map.prototype[\\\"@@iterator\\\"] = function () { return this.entries(); };\\r\\n            Map.prototype[iteratorSymbol] = function () { return this.entries(); };\\r\\n            Map.prototype._find = function (key, insert) {\\r\\n                if (this._cacheKey === key)\\r\\n                    return this._cacheIndex;\\r\\n                var index = this._keys.indexOf(key);\\r\\n                if (index < 0 && insert) {\\r\\n                    index = this._keys.length;\\r\\n                    this._keys.push(key);\\r\\n                    this._values.push(undefined);\\r\\n                }\\r\\n                return this._cacheKey = key, this._cacheIndex = index;\\r\\n            };\\r\\n            return Map;\\r\\n        }());\\r\\n        function getKey(key, _) {\\r\\n            return key;\\r\\n        }\\r\\n        function getValue(_, value) {\\r\\n            return value;\\r\\n        }\\r\\n        function getEntry(key, value) {\\r\\n            return [key, value];\\r\\n        }\\r\\n    }\\r\\n    // naive Set shim\\r\\n    function CreateSetPolyfill() {\\r\\n        return (function () {\\r\\n            function Set() {\\r\\n                this._map = new _Map();\\r\\n            }\\r\\n            Object.defineProperty(Set.prototype, \\\"size\\\", {\\r\\n                get: function () { return this._map.size; },\\r\\n                enumerable: true,\\r\\n                configurable: true\\r\\n            });\\r\\n            Set.prototype.has = function (value) { return this._map.has(value); };\\r\\n            Set.prototype.add = function (value) { return this._map.set(value, value), this; };\\r\\n            Set.prototype.delete = function (value) { return this._map.delete(value); };\\r\\n            Set.prototype.clear = function () { this._map.clear(); };\\r\\n            Set.prototype.keys = function () { return this._map.keys(); };\\r\\n            Set.prototype.values = function () { return this._map.values(); };\\r\\n            Set.prototype.entries = function () { return this._map.entries(); };\\r\\n            Set.prototype[\\\"@@iterator\\\"] = function () { return this.keys(); };\\r\\n            Set.prototype[iteratorSymbol] = function () { return this.keys(); };\\r\\n            return Set;\\r\\n        }());\\r\\n    }\\r\\n    // naive WeakMap shim\\r\\n    function CreateWeakMapPolyfill() {\\r\\n        var UUID_SIZE = 16;\\r\\n        var keys = createDictionary();\\r\\n        var rootKey = CreateUniqueKey();\\r\\n        return (function () {\\r\\n            function WeakMap() {\\r\\n                this._key = CreateUniqueKey();\\r\\n            }\\r\\n            WeakMap.prototype.has = function (target) {\\r\\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\\r\\n                return table !== undefined ? HashMap.has(table, this._key) : false;\\r\\n            };\\r\\n            WeakMap.prototype.get = function (target) {\\r\\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\\r\\n                return table !== undefined ? HashMap.get(table, this._key) : undefined;\\r\\n            };\\r\\n            WeakMap.prototype.set = function (target, value) {\\r\\n                var table = GetOrCreateWeakMapTable(target, /*create*/ true);\\r\\n                table[this._key] = value;\\r\\n                return this;\\r\\n            };\\r\\n            WeakMap.prototype.delete = function (target) {\\r\\n                var table = GetOrCreateWeakMapTable(target, /*create*/ false);\\r\\n                return table !== undefined ? delete table[this._key] : false;\\r\\n            };\\r\\n            WeakMap.prototype.clear = function () {\\r\\n                // NOTE: not a real clear, just makes the previous data unreachable\\r\\n                this._key = CreateUniqueKey();\\r\\n            };\\r\\n            return WeakMap;\\r\\n        }());\\r\\n        function CreateUniqueKey() {\\r\\n            var key;\\r\\n            do\\r\\n                key = \\\"@@WeakMap@@\\\" + CreateUUID();\\r\\n            while (HashMap.has(keys, key));\\r\\n            keys[key] = true;\\r\\n            return key;\\r\\n        }\\r\\n        function GetOrCreateWeakMapTable(target, create) {\\r\\n            if (!hasOwn.call(target, rootKey)) {\\r\\n                if (!create)\\r\\n                    return undefined;\\r\\n                Object.defineProperty(target, rootKey, { value: createDictionary() });\\r\\n            }\\r\\n            return target[rootKey];\\r\\n        }\\r\\n        function FillRandomBytes(buffer, size) {\\r\\n            for (var i = 0; i < size; ++i)\\r\\n                buffer[i] = Math.random() * 0xff | 0;\\r\\n            return buffer;\\r\\n        }\\r\\n        function GenRandomBytes(size) {\\r\\n            if (typeof Uint8Array === \\\"function\\\") {\\r\\n                if (typeof crypto !== \\\"undefined\\\")\\r\\n                    return crypto.getRandomValues(new Uint8Array(size));\\r\\n                if (typeof msCrypto !== \\\"undefined\\\")\\r\\n                    return msCrypto.getRandomValues(new Uint8Array(size));\\r\\n                return FillRandomBytes(new Uint8Array(size), size);\\r\\n            }\\r\\n            return FillRandomBytes(new Array(size), size);\\r\\n        }\\r\\n        function CreateUUID() {\\r\\n            var data = GenRandomBytes(UUID_SIZE);\\r\\n            // mark as random - RFC 4122 § 4.4\\r\\n            data[6] = data[6] & 0x4f | 0x40;\\r\\n            data[8] = data[8] & 0xbf | 0x80;\\r\\n            var result = \\\"\\\";\\r\\n            for (var offset = 0; offset < UUID_SIZE; ++offset) {\\r\\n                var byte = data[offset];\\r\\n                if (offset === 4 || offset === 6 || offset === 8)\\r\\n                    result += \\\"-\\\";\\r\\n                if (byte < 16)\\r\\n                    result += \\\"0\\\";\\r\\n                result += byte.toString(16).toLowerCase();\\r\\n            }\\r\\n            return result;\\r\\n        }\\r\\n    }\\r\\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\\r\\n    function MakeDictionary(obj) {\\r\\n        obj.__ = undefined;\\r\\n        delete obj.__;\\r\\n        return obj;\\r\\n    }\\r\\n    // patch global Reflect\\r\\n    (function (__global) {\\r\\n        if (typeof __global.Reflect !== \\\"undefined\\\") {\\r\\n            if (__global.Reflect !== Reflect) {\\r\\n                for (var p in Reflect) {\\r\\n                    if (hasOwn.call(Reflect, p)) {\\r\\n                        __global.Reflect[p] = Reflect[p];\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            __global.Reflect = Reflect;\\r\\n        }\\r\\n    })(typeof global !== \\\"undefined\\\" ? global :\\r\\n        typeof self !== \\\"undefined\\\" ? self :\\r\\n            Function(\\\"return this;\\\")());\\r\\n})(Reflect || (Reflect = {}));\\r\\n//# sourceMappingURL=Reflect.js.map\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/reflect-metadata/Reflect.js\n// module id = 190\n// module chunks = 2 3","module.exports = \"/**\\n* @license\\n* Copyright Google Inc. All Rights Reserved.\\n*\\n* Use of this source code is governed by an MIT-style license that can be\\n* found in the LICENSE file at https://angular.io/license\\n*/\\n(function (global, factory) {\\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\\n    typeof define === 'function' && define.amd ? define(factory) :\\n    (factory());\\n}(this, (function () { 'use strict';\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\n\\n\\nvar Zone$1 = (function (global) {\\n    if (global['Zone']) {\\n        throw new Error('Zone already loaded.');\\n    }\\n    var Zone = (function () {\\n        function Zone(parent, zoneSpec) {\\n            this._properties = null;\\n            this._parent = parent;\\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\\n            this._properties = zoneSpec && zoneSpec.properties || {};\\n            this._zoneDelegate =\\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\\n        }\\n        Zone.assertZonePatched = function () {\\n            if (global.Promise !== ZoneAwarePromise) {\\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\\n                    'has been overwritten.\\\\n' +\\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\\n                    'If you must load one, do so before loading zone.js.)');\\n            }\\n        };\\n        Object.defineProperty(Zone, \\\"current\\\", {\\n            get: function () {\\n                return _currentZoneFrame.zone;\\n            },\\n            enumerable: true,\\n            configurable: true\\n        });\\n        \\n        Object.defineProperty(Zone, \\\"currentTask\\\", {\\n            get: function () {\\n                return _currentTask;\\n            },\\n            enumerable: true,\\n            configurable: true\\n        });\\n        \\n        Object.defineProperty(Zone.prototype, \\\"parent\\\", {\\n            get: function () {\\n                return this._parent;\\n            },\\n            enumerable: true,\\n            configurable: true\\n        });\\n        \\n        Object.defineProperty(Zone.prototype, \\\"name\\\", {\\n            get: function () {\\n                return this._name;\\n            },\\n            enumerable: true,\\n            configurable: true\\n        });\\n        \\n        Zone.prototype.get = function (key) {\\n            var zone = this.getZoneWith(key);\\n            if (zone)\\n                return zone._properties[key];\\n        };\\n        Zone.prototype.getZoneWith = function (key) {\\n            var current = this;\\n            while (current) {\\n                if (current._properties.hasOwnProperty(key)) {\\n                    return current;\\n                }\\n                current = current._parent;\\n            }\\n            return null;\\n        };\\n        Zone.prototype.fork = function (zoneSpec) {\\n            if (!zoneSpec)\\n                throw new Error('ZoneSpec required!');\\n            return this._zoneDelegate.fork(this, zoneSpec);\\n        };\\n        Zone.prototype.wrap = function (callback, source) {\\n            if (typeof callback !== 'function') {\\n                throw new Error('Expecting function got: ' + callback);\\n            }\\n            var _callback = this._zoneDelegate.intercept(this, callback, source);\\n            var zone = this;\\n            return function () {\\n                return zone.runGuarded(_callback, this, arguments, source);\\n            };\\n        };\\n        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {\\n            if (applyThis === void 0) { applyThis = null; }\\n            if (applyArgs === void 0) { applyArgs = null; }\\n            if (source === void 0) { source = null; }\\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\\n            try {\\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\\n            }\\n            finally {\\n                _currentZoneFrame = _currentZoneFrame.parent;\\n            }\\n        };\\n        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {\\n            if (applyThis === void 0) { applyThis = null; }\\n            if (applyArgs === void 0) { applyArgs = null; }\\n            if (source === void 0) { source = null; }\\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\\n            try {\\n                try {\\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\\n                }\\n                catch (error) {\\n                    if (this._zoneDelegate.handleError(this, error)) {\\n                        throw error;\\n                    }\\n                }\\n            }\\n            finally {\\n                _currentZoneFrame = _currentZoneFrame.parent;\\n            }\\n        };\\n        Zone.prototype.runTask = function (task, applyThis, applyArgs) {\\n            task.runCount++;\\n            if (task.zone != this)\\n                throw new Error('A task can only be run in the zone which created it! (Creation: ' + task.zone.name +\\n                    '; Execution: ' + this.name + ')');\\n            var previousTask = _currentTask;\\n            _currentTask = task;\\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\\n            try {\\n                if (task.type == 'macroTask' && task.data && !task.data.isPeriodic) {\\n                    task.cancelFn = null;\\n                }\\n                try {\\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\\n                }\\n                catch (error) {\\n                    if (this._zoneDelegate.handleError(this, error)) {\\n                        throw error;\\n                    }\\n                }\\n            }\\n            finally {\\n                _currentZoneFrame = _currentZoneFrame.parent;\\n                _currentTask = previousTask;\\n            }\\n        };\\n        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {\\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('microTask', this, source, callback, data, customSchedule, null));\\n        };\\n        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {\\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('macroTask', this, source, callback, data, customSchedule, customCancel));\\n        };\\n        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {\\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('eventTask', this, source, callback, data, customSchedule, customCancel));\\n        };\\n        Zone.prototype.cancelTask = function (task) {\\n            var value = this._zoneDelegate.cancelTask(this, task);\\n            task.runCount = -1;\\n            task.cancelFn = null;\\n            return value;\\n        };\\n        return Zone;\\n    }());\\n    Zone.__symbol__ = __symbol__;\\n    \\n    var ZoneDelegate = (function () {\\n        function ZoneDelegate(zone, parentDelegate, zoneSpec) {\\n            this._taskCounts = { microTask: 0, macroTask: 0, eventTask: 0 };\\n            this.zone = zone;\\n            this._parentDelegate = parentDelegate;\\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\\n            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);\\n            this._interceptZS =\\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\\n            this._interceptDlgt =\\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\\n            this._interceptCurrZone =\\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);\\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\\n            this._invokeDlgt =\\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\\n            this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);\\n            this._handleErrorZS =\\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\\n            this._handleErrorDlgt =\\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\\n            this._handleErrorCurrZone =\\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);\\n            this._scheduleTaskZS =\\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\\n            this._scheduleTaskDlgt =\\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\\n            this._scheduleTaskCurrZone =\\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);\\n            this._invokeTaskZS =\\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\\n            this._invokeTaskDlgt =\\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\\n            this._invokeTaskCurrZone =\\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);\\n            this._cancelTaskZS =\\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\\n            this._cancelTaskDlgt =\\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\\n            this._cancelTaskCurrZone =\\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);\\n            this._hasTaskZS = zoneSpec && (zoneSpec.onHasTask ? zoneSpec : parentDelegate._hasTaskZS);\\n            this._hasTaskDlgt =\\n                zoneSpec && (zoneSpec.onHasTask ? parentDelegate : parentDelegate._hasTaskDlgt);\\n            this._hasTaskCurrZone = zoneSpec && (zoneSpec.onHasTask ? this.zone : parentDelegate.zone);\\n        }\\n        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {\\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\\n                new Zone(targetZone, zoneSpec);\\n        };\\n        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {\\n            return this._interceptZS ?\\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\\n                callback;\\n        };\\n        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {\\n            return this._invokeZS ?\\n                this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\\n                callback.apply(applyThis, applyArgs);\\n        };\\n        ZoneDelegate.prototype.handleError = function (targetZone, error) {\\n            return this._handleErrorZS ?\\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\\n                true;\\n        };\\n        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {\\n            try {\\n                if (this._scheduleTaskZS) {\\n                    return this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\\n                }\\n                else if (task.scheduleFn) {\\n                    task.scheduleFn(task);\\n                }\\n                else if (task.type == 'microTask') {\\n                    scheduleMicroTask(task);\\n                }\\n                else {\\n                    throw new Error('Task is missing scheduleFn.');\\n                }\\n                return task;\\n            }\\n            finally {\\n                if (targetZone == this.zone) {\\n                    this._updateTaskCount(task.type, 1);\\n                }\\n            }\\n        };\\n        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {\\n            try {\\n                return this._invokeTaskZS ?\\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\\n                    task.callback.apply(applyThis, applyArgs);\\n            }\\n            finally {\\n                if (targetZone == this.zone && (task.type != 'eventTask') &&\\n                    !(task.data && task.data.isPeriodic)) {\\n                    this._updateTaskCount(task.type, -1);\\n                }\\n            }\\n        };\\n        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {\\n            var value;\\n            if (this._cancelTaskZS) {\\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\\n            }\\n            else if (!task.cancelFn) {\\n                throw new Error('Task does not support cancellation, or is already canceled.');\\n            }\\n            else {\\n                value = task.cancelFn(task);\\n            }\\n            if (targetZone == this.zone) {\\n                // this should not be in the finally block, because exceptions assume not canceled.\\n                this._updateTaskCount(task.type, -1);\\n            }\\n            return value;\\n        };\\n        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {\\n            return this._hasTaskZS &&\\n                this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\\n        };\\n        ZoneDelegate.prototype._updateTaskCount = function (type, count) {\\n            var counts = this._taskCounts;\\n            var prev = counts[type];\\n            var next = counts[type] = prev + count;\\n            if (next < 0) {\\n                throw new Error('More tasks executed then were scheduled.');\\n            }\\n            if (prev == 0 || next == 0) {\\n                var isEmpty = {\\n                    microTask: counts.microTask > 0,\\n                    macroTask: counts.macroTask > 0,\\n                    eventTask: counts.eventTask > 0,\\n                    change: type\\n                };\\n                try {\\n                    this.hasTask(this.zone, isEmpty);\\n                }\\n                finally {\\n                    if (this._parentDelegate) {\\n                        this._parentDelegate._updateTaskCount(type, count);\\n                    }\\n                }\\n            }\\n        };\\n        return ZoneDelegate;\\n    }());\\n    var ZoneTask = (function () {\\n        function ZoneTask(type, zone, source, callback, options, scheduleFn, cancelFn) {\\n            this.runCount = 0;\\n            this.type = type;\\n            this.zone = zone;\\n            this.source = source;\\n            this.data = options;\\n            this.scheduleFn = scheduleFn;\\n            this.cancelFn = cancelFn;\\n            this.callback = callback;\\n            var self = this;\\n            this.invoke = function () {\\n                _numberOfNestedTaskFrames++;\\n                try {\\n                    return zone.runTask(self, this, arguments);\\n                }\\n                finally {\\n                    if (_numberOfNestedTaskFrames == 1) {\\n                        drainMicroTaskQueue();\\n                    }\\n                    _numberOfNestedTaskFrames--;\\n                }\\n            };\\n        }\\n        ZoneTask.prototype.toString = function () {\\n            if (this.data && typeof this.data.handleId !== 'undefined') {\\n                return this.data.handleId;\\n            }\\n            else {\\n                return Object.prototype.toString.call(this);\\n            }\\n        };\\n        // add toJSON method to prevent cyclic error when\\n        // call JSON.stringify(zoneTask)\\n        ZoneTask.prototype.toJSON = function () {\\n            return {\\n                type: this.type,\\n                source: this.source,\\n                data: this.data,\\n                zone: this.zone.name,\\n                invoke: this.invoke,\\n                scheduleFn: this.scheduleFn,\\n                cancelFn: this.cancelFn,\\n                runCount: this.runCount,\\n                callback: this.callback\\n            };\\n        };\\n        return ZoneTask;\\n    }());\\n    var ZoneFrame = (function () {\\n        function ZoneFrame(parent, zone) {\\n            this.parent = parent;\\n            this.zone = zone;\\n        }\\n        return ZoneFrame;\\n    }());\\n    function __symbol__(name) {\\n        return '__zone_symbol__' + name;\\n    }\\n    \\n    var symbolSetTimeout = __symbol__('setTimeout');\\n    var symbolPromise = __symbol__('Promise');\\n    var symbolThen = __symbol__('then');\\n    var _currentZoneFrame = new ZoneFrame(null, new Zone(null, null));\\n    var _currentTask = null;\\n    var _microTaskQueue = [];\\n    var _isDrainingMicrotaskQueue = false;\\n    var _uncaughtPromiseErrors = [];\\n    var _numberOfNestedTaskFrames = 0;\\n    function scheduleQueueDrain() {\\n        // if we are not running in any task, and there has not been anything scheduled\\n        // we must bootstrap the initial task creation by manually scheduling the drain\\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\\n            // We are not running in Task, so we need to kickstart the microtask queue.\\n            if (global[symbolPromise]) {\\n                global[symbolPromise].resolve(0)[symbolThen](drainMicroTaskQueue);\\n            }\\n            else {\\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\\n            }\\n        }\\n    }\\n    function scheduleMicroTask(task) {\\n        scheduleQueueDrain();\\n        _microTaskQueue.push(task);\\n    }\\n    function consoleError(e) {\\n        var rejection = e && e.rejection;\\n        if (rejection) {\\n            console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\\n        }\\n        console.error(e);\\n    }\\n    function drainMicroTaskQueue() {\\n        if (!_isDrainingMicrotaskQueue) {\\n            _isDrainingMicrotaskQueue = true;\\n            while (_microTaskQueue.length) {\\n                var queue = _microTaskQueue;\\n                _microTaskQueue = [];\\n                for (var i = 0; i < queue.length; i++) {\\n                    var task = queue[i];\\n                    try {\\n                        task.zone.runTask(task, null, null);\\n                    }\\n                    catch (e) {\\n                        consoleError(e);\\n                    }\\n                }\\n            }\\n            while (_uncaughtPromiseErrors.length) {\\n                var _loop_1 = function () {\\n                    var uncaughtPromiseError = _uncaughtPromiseErrors.shift();\\n                    try {\\n                        uncaughtPromiseError.zone.runGuarded(function () {\\n                            throw uncaughtPromiseError;\\n                        });\\n                    }\\n                    catch (e) {\\n                        consoleError(e);\\n                    }\\n                };\\n                while (_uncaughtPromiseErrors.length) {\\n                    _loop_1();\\n                }\\n            }\\n            _isDrainingMicrotaskQueue = false;\\n        }\\n    }\\n    function isThenable(value) {\\n        return value && value.then;\\n    }\\n    function forwardResolution(value) {\\n        return value;\\n    }\\n    function forwardRejection(rejection) {\\n        return ZoneAwarePromise.reject(rejection);\\n    }\\n    var symbolState = __symbol__('state');\\n    var symbolValue = __symbol__('value');\\n    var source = 'Promise.then';\\n    var UNRESOLVED = null;\\n    var RESOLVED = true;\\n    var REJECTED = false;\\n    var REJECTED_NO_CATCH = 0;\\n    function makeResolver(promise, state) {\\n        return function (v) {\\n            resolvePromise(promise, state, v);\\n            // Do not return value or you will break the Promise spec.\\n        };\\n    }\\n    function resolvePromise(promise, state, value) {\\n        if (promise[symbolState] === UNRESOLVED) {\\n            if (value instanceof ZoneAwarePromise && value.hasOwnProperty(symbolState) &&\\n                value.hasOwnProperty(symbolValue) && value[symbolState] !== UNRESOLVED) {\\n                clearRejectedNoCatch(value);\\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\\n            }\\n            else if (isThenable(value)) {\\n                value.then(makeResolver(promise, state), makeResolver(promise, false));\\n            }\\n            else {\\n                promise[symbolState] = state;\\n                var queue = promise[symbolValue];\\n                promise[symbolValue] = value;\\n                for (var i = 0; i < queue.length;) {\\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\\n                }\\n                if (queue.length == 0 && state == REJECTED) {\\n                    promise[symbolState] = REJECTED_NO_CATCH;\\n                    try {\\n                        throw new Error('Uncaught (in promise): ' + value +\\n                            (value && value.stack ? '\\\\n' + value.stack : ''));\\n                    }\\n                    catch (e) {\\n                        var error_1 = e;\\n                        error_1.rejection = value;\\n                        error_1.promise = promise;\\n                        error_1.zone = Zone.current;\\n                        error_1.task = Zone.currentTask;\\n                        _uncaughtPromiseErrors.push(error_1);\\n                        scheduleQueueDrain();\\n                    }\\n                }\\n            }\\n        }\\n        // Resolving an already resolved promise is a noop.\\n        return promise;\\n    }\\n    function clearRejectedNoCatch(promise) {\\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\\n            promise[symbolState] = REJECTED;\\n            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {\\n                if (promise === _uncaughtPromiseErrors[i].promise) {\\n                    _uncaughtPromiseErrors.splice(i, 1);\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\\n        clearRejectedNoCatch(promise);\\n        var delegate = promise[symbolState] ? onFulfilled || forwardResolution : onRejected || forwardRejection;\\n        zone.scheduleMicroTask(source, function () {\\n            try {\\n                resolvePromise(chainPromise, true, zone.run(delegate, null, [promise[symbolValue]]));\\n            }\\n            catch (error) {\\n                resolvePromise(chainPromise, false, error);\\n            }\\n        });\\n    }\\n    var ZoneAwarePromise = (function () {\\n        function ZoneAwarePromise(executor) {\\n            var promise = this;\\n            if (!(promise instanceof ZoneAwarePromise)) {\\n                throw new Error('Must be an instanceof Promise.');\\n            }\\n            promise[symbolState] = UNRESOLVED;\\n            promise[symbolValue] = []; // queue;\\n            try {\\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\\n            }\\n            catch (e) {\\n                resolvePromise(promise, false, e);\\n            }\\n        }\\n        ZoneAwarePromise.toString = function () {\\n            return 'function ZoneAwarePromise() { [native code] }';\\n        };\\n        ZoneAwarePromise.resolve = function (value) {\\n            return resolvePromise(new this(null), RESOLVED, value);\\n        };\\n        ZoneAwarePromise.reject = function (error) {\\n            return resolvePromise(new this(null), REJECTED, error);\\n        };\\n        ZoneAwarePromise.race = function (values) {\\n            var resolve;\\n            var reject;\\n            var promise = new this(function (res, rej) {\\n                _a = [res, rej], resolve = _a[0], reject = _a[1];\\n                var _a;\\n            });\\n            function onResolve(value) {\\n                promise && (promise = null || resolve(value));\\n            }\\n            function onReject(error) {\\n                promise && (promise = null || reject(error));\\n            }\\n            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\\n                var value = values_1[_i];\\n                if (!isThenable(value)) {\\n                    value = this.resolve(value);\\n                }\\n                value.then(onResolve, onReject);\\n            }\\n            return promise;\\n        };\\n        ZoneAwarePromise.all = function (values) {\\n            var resolve;\\n            var reject;\\n            var promise = new this(function (res, rej) {\\n                resolve = res;\\n                reject = rej;\\n            });\\n            var count = 0;\\n            var resolvedValues = [];\\n            for (var _i = 0, values_2 = values; _i < values_2.length; _i++) {\\n                var value = values_2[_i];\\n                if (!isThenable(value)) {\\n                    value = this.resolve(value);\\n                }\\n                value.then((function (index) { return function (value) {\\n                    resolvedValues[index] = value;\\n                    count--;\\n                    if (!count) {\\n                        resolve(resolvedValues);\\n                    }\\n                }; })(count), reject);\\n                count++;\\n            }\\n            if (!count)\\n                resolve(resolvedValues);\\n            return promise;\\n        };\\n        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {\\n            var chainPromise = new this.constructor(null);\\n            var zone = Zone.current;\\n            if (this[symbolState] == UNRESOLVED) {\\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\\n            }\\n            else {\\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\\n            }\\n            return chainPromise;\\n        };\\n        ZoneAwarePromise.prototype.catch = function (onRejected) {\\n            return this.then(null, onRejected);\\n        };\\n        return ZoneAwarePromise;\\n    }());\\n    // Protect against aggressive optimizers dropping seemingly unused properties.\\n    // E.g. Closure Compiler in advanced mode.\\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\\n    var NativePromise = global[__symbol__('Promise')] = global['Promise'];\\n    global['Promise'] = ZoneAwarePromise;\\n    function patchThen(NativePromise) {\\n        var NativePromiseProtototype = NativePromise.prototype;\\n        var NativePromiseThen = NativePromiseProtototype[__symbol__('then')] =\\n            NativePromiseProtototype.then;\\n        NativePromiseProtototype.then = function (onResolve, onReject) {\\n            var nativePromise = this;\\n            return new ZoneAwarePromise(function (resolve, reject) {\\n                NativePromiseThen.call(nativePromise, resolve, reject);\\n            })\\n                .then(onResolve, onReject);\\n        };\\n    }\\n    if (NativePromise) {\\n        patchThen(NativePromise);\\n        if (typeof global['fetch'] !== 'undefined') {\\n            var fetchPromise = void 0;\\n            try {\\n                // In MS Edge this throws\\n                fetchPromise = global['fetch']();\\n            }\\n            catch (e) {\\n                // In Chrome this throws instead.\\n                fetchPromise = global['fetch']('about:blank');\\n            }\\n            // ignore output to prevent error;\\n            fetchPromise.then(function () { return null; }, function () { return null; });\\n            if (fetchPromise.constructor != NativePromise &&\\n                fetchPromise.constructor != ZoneAwarePromise) {\\n                patchThen(fetchPromise.constructor);\\n            }\\n        }\\n    }\\n    // This is not part of public API, but it is usefull for tests, so we expose it.\\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\\n    /*\\n     * This code patches Error so that:\\n     *   - It ignores un-needed stack frames.\\n     *   - It Shows the associated Zone for reach frame.\\n     */\\n    var FrameType;\\n    (function (FrameType) {\\n        /// Skip this frame when printing out stack\\n        FrameType[FrameType[\\\"blackList\\\"] = 0] = \\\"blackList\\\";\\n        /// This frame marks zone transition\\n        FrameType[FrameType[\\\"transition\\\"] = 1] = \\\"transition\\\";\\n    })(FrameType || (FrameType = {}));\\n    var NativeError = global[__symbol__('Error')] = global.Error;\\n    // Store the frames which should be removed from the stack frames\\n    var blackListedStackFrames = {};\\n    // We must find the frame where Error was created, otherwise we assume we don't understand stack\\n    var zoneAwareFrame;\\n    global.Error = ZoneAwareError;\\n    // How should the stack frames be parsed.\\n    var frameParserStrategy = null;\\n    var stackRewrite = 'stackRewrite';\\n    // fix #595, create property descriptor\\n    // for error properties\\n    var createProperty = function (props, key) {\\n        // if property is already defined, skip it.\\n        if (props[key]) {\\n            return;\\n        }\\n        // define a local property\\n        // in case error property is not settable\\n        var name = __symbol__(key);\\n        props[key] = {\\n            configurable: true,\\n            enumerable: true,\\n            get: function () {\\n                // if local property has no value\\n                // use internal error's property value\\n                if (!this[name]) {\\n                    var error_2 = this[__symbol__('error')];\\n                    if (error_2) {\\n                        this[name] = error_2[key];\\n                    }\\n                }\\n                return this[name];\\n            },\\n            set: function (value) {\\n                // setter will set value to local property value\\n                this[name] = value;\\n            }\\n        };\\n    };\\n    // fix #595, create property descriptor\\n    // for error method properties\\n    var createMethodProperty = function (props, key) {\\n        if (props[key]) {\\n            return;\\n        }\\n        props[key] = {\\n            configurable: true,\\n            enumerable: true,\\n            writable: true,\\n            value: function () {\\n                var error = this[__symbol__('error')];\\n                var errorMethod = (error && error[key]) || this[key];\\n                if (errorMethod) {\\n                    return errorMethod.apply(error, arguments);\\n                }\\n            }\\n        };\\n    };\\n    var createErrorProperties = function () {\\n        var props = Object.create(null);\\n        var error = new NativeError();\\n        var keys = Object.getOwnPropertyNames(error);\\n        for (var i = 0; i < keys.length; i++) {\\n            var key = keys[i];\\n            // Avoid bugs when hasOwnProperty is shadowed\\n            if (Object.prototype.hasOwnProperty.call(error, key)) {\\n                createProperty(props, key);\\n            }\\n        }\\n        var proto = NativeError.prototype;\\n        if (proto) {\\n            var pKeys = Object.getOwnPropertyNames(proto);\\n            for (var i = 0; i < pKeys.length; i++) {\\n                var key = pKeys[i];\\n                // skip constructor\\n                if (key !== 'constructor' && key !== 'toString' && key !== 'toSource') {\\n                    createProperty(props, key);\\n                }\\n            }\\n        }\\n        // some other properties are not\\n        // in NativeError\\n        createProperty(props, 'originalStack');\\n        createProperty(props, 'zoneAwareStack');\\n        // define toString, toSource as method property\\n        createMethodProperty(props, 'toString');\\n        createMethodProperty(props, 'toSource');\\n        return props;\\n    };\\n    var errorProperties = createErrorProperties();\\n    // for derived Error class which extends ZoneAwareError\\n    // we should not override the derived class's property\\n    // so we create a new props object only copy the properties\\n    // from errorProperties which not exist in derived Error's prototype\\n    var getErrorPropertiesForPrototype = function (prototype) {\\n        // if the prototype is ZoneAwareError.prototype\\n        // we just return the prebuilt errorProperties.\\n        if (prototype === ZoneAwareError.prototype) {\\n            return errorProperties;\\n        }\\n        var newProps = Object.create(null);\\n        var cKeys = Object.getOwnPropertyNames(errorProperties);\\n        var keys = Object.getOwnPropertyNames(prototype);\\n        cKeys.forEach(function (cKey) {\\n            if (keys.filter(function (key) {\\n                return key === cKey;\\n            })\\n                .length === 0) {\\n                newProps[cKey] = errorProperties[cKey];\\n            }\\n        });\\n        return newProps;\\n    };\\n    /**\\n     * This is ZoneAwareError which processes the stack frame and cleans up extra frames as well as\\n     * adds zone information to it.\\n     */\\n    function ZoneAwareError() {\\n        // make sure we have a valid this\\n        // if this is undefined(call Error without new) or this is global\\n        // or this is some other objects, we should force to create a\\n        // valid ZoneAwareError by call Object.create()\\n        if (!(this instanceof ZoneAwareError)) {\\n            return ZoneAwareError.apply(Object.create(ZoneAwareError.prototype), arguments);\\n        }\\n        // Create an Error.\\n        var error = NativeError.apply(this, arguments);\\n        this[__symbol__('error')] = error;\\n        // Save original stack trace\\n        error.originalStack = error.stack;\\n        // Process the stack trace and rewrite the frames.\\n        if (ZoneAwareError[stackRewrite] && error.originalStack) {\\n            var frames_1 = error.originalStack.split('\\\\n');\\n            var zoneFrame = _currentZoneFrame;\\n            var i = 0;\\n            // Find the first frame\\n            while (frames_1[i] !== zoneAwareFrame && i < frames_1.length) {\\n                i++;\\n            }\\n            for (; i < frames_1.length && zoneFrame; i++) {\\n                var frame = frames_1[i];\\n                if (frame.trim()) {\\n                    var frameType = blackListedStackFrames.hasOwnProperty(frame) && blackListedStackFrames[frame];\\n                    if (frameType === FrameType.blackList) {\\n                        frames_1.splice(i, 1);\\n                        i--;\\n                    }\\n                    else if (frameType === FrameType.transition) {\\n                        if (zoneFrame.parent) {\\n                            // This is the special frame where zone changed. Print and process it accordingly\\n                            frames_1[i] += \\\" [\\\" + zoneFrame.parent.zone.name + \\\" => \\\" + zoneFrame.zone.name + \\\"]\\\";\\n                            zoneFrame = zoneFrame.parent;\\n                        }\\n                        else {\\n                            zoneFrame = null;\\n                        }\\n                    }\\n                    else {\\n                        frames_1[i] += \\\" [\\\" + zoneFrame.zone.name + \\\"]\\\";\\n                    }\\n                }\\n            }\\n            error.stack = error.zoneAwareStack = frames_1.join('\\\\n');\\n        }\\n        // use defineProperties here instead of copy property value\\n        // because of issue #595 which will break angular2.\\n        Object.defineProperties(this, getErrorPropertiesForPrototype(Object.getPrototypeOf(this)));\\n        return this;\\n    }\\n    // Copy the prototype so that instanceof operator works as expected\\n    ZoneAwareError.prototype = NativeError.prototype;\\n    ZoneAwareError[Zone.__symbol__('blacklistedStackFrames')] = blackListedStackFrames;\\n    ZoneAwareError[stackRewrite] = false;\\n    if (NativeError.hasOwnProperty('stackTraceLimit')) {\\n        // Extend default stack limit as we will be removing few frames.\\n        NativeError.stackTraceLimit = Math.max(NativeError.stackTraceLimit, 15);\\n        // make sure that ZoneAwareError has the same property which forwards to NativeError.\\n        Object.defineProperty(ZoneAwareError, 'stackTraceLimit', {\\n            get: function () {\\n                return NativeError.stackTraceLimit;\\n            },\\n            set: function (value) {\\n                return NativeError.stackTraceLimit = value;\\n            }\\n        });\\n    }\\n    if (NativeError.hasOwnProperty('captureStackTrace')) {\\n        Object.defineProperty(ZoneAwareError, 'captureStackTrace', {\\n            // add named function here because we need to remove this\\n            // stack frame when prepareStackTrace below\\n            value: function zoneCaptureStackTrace(targetObject, constructorOpt) {\\n                NativeError.captureStackTrace(targetObject, constructorOpt);\\n            }\\n        });\\n    }\\n    Object.defineProperty(ZoneAwareError, 'prepareStackTrace', {\\n        get: function () {\\n            return NativeError.prepareStackTrace;\\n        },\\n        set: function (value) {\\n            if (!value || typeof value !== 'function') {\\n                return NativeError.prepareStackTrace = value;\\n            }\\n            return NativeError.prepareStackTrace = function (error, structuredStackTrace) {\\n                // remove additional stack information from ZoneAwareError.captureStackTrace\\n                if (structuredStackTrace) {\\n                    for (var i = 0; i < structuredStackTrace.length; i++) {\\n                        var st = structuredStackTrace[i];\\n                        // remove the first function which name is zoneCaptureStackTrace\\n                        if (st.getFunctionName() === 'zoneCaptureStackTrace') {\\n                            structuredStackTrace.splice(i, 1);\\n                            break;\\n                        }\\n                    }\\n                }\\n                return value.apply(this, [error, structuredStackTrace]);\\n            };\\n        }\\n    });\\n    // Now we need to populet the `blacklistedStackFrames` as well as find the\\n    // run/runGuraded/runTask frames. This is done by creating a detect zone and then threading\\n    // the execution through all of the above methods so that we can look at the stack trace and\\n    // find the frames of interest.\\n    var detectZone = Zone.current.fork({\\n        name: 'detect',\\n        onInvoke: function (parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source) {\\n            // Here only so that it will show up in the stack frame so that it can be black listed.\\n            return parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source);\\n        },\\n        onHandleError: function (parentZD, current, target, error) {\\n            if (error.originalStack && Error === ZoneAwareError) {\\n                var frames_2 = error.originalStack.split(/\\\\n/);\\n                var runFrame = false, runGuardedFrame = false, runTaskFrame = false;\\n                while (frames_2.length) {\\n                    var frame = frames_2.shift();\\n                    // On safari it is possible to have stack frame with no line number.\\n                    // This check makes sure that we don't filter frames on name only (must have\\n                    // linenumber)\\n                    if (/:\\\\d+:\\\\d+/.test(frame)) {\\n                        // Get rid of the path so that we don't accidintely find function name in path.\\n                        // In chrome the seperator is `(` and `@` in FF and safari\\n                        // Chrome: at Zone.run (zone.js:100)\\n                        // Chrome: at Zone.run (http://localhost:9876/base/build/lib/zone.js:100:24)\\n                        // FireFox: Zone.prototype.run@http://localhost:9876/base/build/lib/zone.js:101:24\\n                        // Safari: run@http://localhost:9876/base/build/lib/zone.js:101:24\\n                        var fnName = frame.split('(')[0].split('@')[0];\\n                        var frameType = FrameType.transition;\\n                        if (fnName.indexOf('ZoneAwareError') !== -1) {\\n                            zoneAwareFrame = frame;\\n                        }\\n                        if (fnName.indexOf('runGuarded') !== -1) {\\n                            runGuardedFrame = true;\\n                        }\\n                        else if (fnName.indexOf('runTask') !== -1) {\\n                            runTaskFrame = true;\\n                        }\\n                        else if (fnName.indexOf('run') !== -1) {\\n                            runFrame = true;\\n                        }\\n                        else {\\n                            frameType = FrameType.blackList;\\n                        }\\n                        blackListedStackFrames[frame] = frameType;\\n                        // Once we find all of the frames we can stop looking.\\n                        if (runFrame && runGuardedFrame && runTaskFrame) {\\n                            ZoneAwareError[stackRewrite] = true;\\n                            break;\\n                        }\\n                    }\\n                }\\n            }\\n            return false;\\n        }\\n    });\\n    // carefully constructor a stack frame which contains all of the frames of interest which\\n    // need to be detected and blacklisted.\\n    var detectRunFn = function () {\\n        detectZone.run(function () {\\n            detectZone.runGuarded(function () {\\n                throw new Error('blacklistStackFrames');\\n            });\\n        });\\n    };\\n    // Cause the error to extract the stack frames.\\n    detectZone.runTask(detectZone.scheduleMacroTask('detect', detectRunFn, null, function () { return null; }, null));\\n    return global['Zone'] = Zone;\\n})(typeof window === 'object' && window || typeof self === 'object' && self || global);\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\n/**\\n * Suppress closure compiler errors about unknown 'Zone' variable\\n * @fileoverview\\n * @suppress {undefinedVars}\\n */\\nvar zoneSymbol = function (n) { return \\\"__zone_symbol__\\\" + n; };\\nvar _global$1 = typeof window === 'object' && window || typeof self === 'object' && self || global;\\nfunction bindArguments(args, source) {\\n    for (var i = args.length - 1; i >= 0; i--) {\\n        if (typeof args[i] === 'function') {\\n            args[i] = Zone.current.wrap(args[i], source + '_' + i);\\n        }\\n    }\\n    return args;\\n}\\nfunction patchPrototype(prototype, fnNames) {\\n    var source = prototype.constructor['name'];\\n    var _loop_1 = function (i) {\\n        var name_1 = fnNames[i];\\n        var delegate = prototype[name_1];\\n        if (delegate) {\\n            prototype[name_1] = (function (delegate) {\\n                return function () {\\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name_1));\\n                };\\n            })(delegate);\\n        }\\n    };\\n    for (var i = 0; i < fnNames.length; i++) {\\n        _loop_1(i);\\n    }\\n}\\nvar isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\\nvar isNode = (!('nw' in _global$1) && typeof process !== 'undefined' &&\\n    {}.toString.call(process) === '[object process]');\\nvar isBrowser = !isNode && !isWebWorker && !!(typeof window !== 'undefined' && window['HTMLElement']);\\nfunction patchProperty(obj, prop) {\\n    var desc = Object.getOwnPropertyDescriptor(obj, prop) || { enumerable: true, configurable: true };\\n    var originalDesc = Object.getOwnPropertyDescriptor(obj, 'original' + prop);\\n    if (!originalDesc && desc.get) {\\n        Object.defineProperty(obj, 'original' + prop, { enumerable: false, configurable: true, get: desc.get });\\n    }\\n    // A property descriptor cannot have getter/setter and be writable\\n    // deleting the writable and value properties avoids this error:\\n    //\\n    // TypeError: property descriptors must not specify a value or be writable when a\\n    // getter or setter has been specified\\n    delete desc.writable;\\n    delete desc.value;\\n    // substr(2) cuz 'onclick' -> 'click', etc\\n    var eventName = prop.substr(2);\\n    var _prop = '_' + prop;\\n    desc.set = function (fn) {\\n        if (this[_prop]) {\\n            this.removeEventListener(eventName, this[_prop]);\\n        }\\n        if (typeof fn === 'function') {\\n            var wrapFn = function (event) {\\n                var result;\\n                result = fn.apply(this, arguments);\\n                if (result != undefined && !result)\\n                    event.preventDefault();\\n            };\\n            this[_prop] = wrapFn;\\n            this.addEventListener(eventName, wrapFn, false);\\n        }\\n        else {\\n            this[_prop] = null;\\n        }\\n    };\\n    // The getter would return undefined for unassigned properties but the default value of an\\n    // unassigned property is null\\n    desc.get = function () {\\n        var r = this[_prop] || null;\\n        // result will be null when use inline event attribute,\\n        // such as <button onclick=\\\"func();\\\">OK</button>\\n        // because the onclick function is internal raw uncompiled handler\\n        // the onclick will be evaluated when first time event was triggered or\\n        // the property is accessed, https://github.com/angular/zone.js/issues/525\\n        // so we should use original native get to retrieve the handler\\n        if (r === null) {\\n            if (originalDesc && originalDesc.get) {\\n                r = originalDesc.get.apply(this, arguments);\\n                if (r) {\\n                    desc.set.apply(this, [r]);\\n                    if (typeof this['removeAttribute'] === 'function') {\\n                        this.removeAttribute(prop);\\n                    }\\n                }\\n            }\\n        }\\n        return this[_prop] || null;\\n    };\\n    Object.defineProperty(obj, prop, desc);\\n}\\n\\nfunction patchOnProperties(obj, properties) {\\n    var onProperties = [];\\n    for (var prop in obj) {\\n        if (prop.substr(0, 2) == 'on') {\\n            onProperties.push(prop);\\n        }\\n    }\\n    for (var j = 0; j < onProperties.length; j++) {\\n        patchProperty(obj, onProperties[j]);\\n    }\\n    if (properties) {\\n        for (var i = 0; i < properties.length; i++) {\\n            patchProperty(obj, 'on' + properties[i]);\\n        }\\n    }\\n}\\n\\nvar EVENT_TASKS = zoneSymbol('eventTasks');\\n// For EventTarget\\nvar ADD_EVENT_LISTENER = 'addEventListener';\\nvar REMOVE_EVENT_LISTENER = 'removeEventListener';\\nfunction findExistingRegisteredTask(target, handler, name, capture, remove) {\\n    var eventTasks = target[EVENT_TASKS];\\n    if (eventTasks) {\\n        for (var i = 0; i < eventTasks.length; i++) {\\n            var eventTask = eventTasks[i];\\n            var data = eventTask.data;\\n            var listener = data.handler;\\n            if ((data.handler === handler || listener.listener === handler) &&\\n                data.useCapturing === capture && data.eventName === name) {\\n                if (remove) {\\n                    eventTasks.splice(i, 1);\\n                }\\n                return eventTask;\\n            }\\n        }\\n    }\\n    return null;\\n}\\nfunction findAllExistingRegisteredTasks(target, name, capture, remove) {\\n    var eventTasks = target[EVENT_TASKS];\\n    if (eventTasks) {\\n        var result = [];\\n        for (var i = eventTasks.length - 1; i >= 0; i--) {\\n            var eventTask = eventTasks[i];\\n            var data = eventTask.data;\\n            if (data.eventName === name && data.useCapturing === capture) {\\n                result.push(eventTask);\\n                if (remove) {\\n                    eventTasks.splice(i, 1);\\n                }\\n            }\\n        }\\n        return result;\\n    }\\n    return null;\\n}\\nfunction attachRegisteredEvent(target, eventTask, isPrepend) {\\n    var eventTasks = target[EVENT_TASKS];\\n    if (!eventTasks) {\\n        eventTasks = target[EVENT_TASKS] = [];\\n    }\\n    if (isPrepend) {\\n        eventTasks.unshift(eventTask);\\n    }\\n    else {\\n        eventTasks.push(eventTask);\\n    }\\n}\\nvar defaultListenerMetaCreator = function (self, args) {\\n    return {\\n        useCapturing: args[2],\\n        eventName: args[0],\\n        handler: args[1],\\n        target: self || _global$1,\\n        name: args[0],\\n        invokeAddFunc: function (addFnSymbol, delegate) {\\n            if (delegate && delegate.invoke) {\\n                return this.target[addFnSymbol](this.eventName, delegate.invoke, this.useCapturing);\\n            }\\n            else {\\n                return this.target[addFnSymbol](this.eventName, delegate, this.useCapturing);\\n            }\\n        },\\n        invokeRemoveFunc: function (removeFnSymbol, delegate) {\\n            if (delegate && delegate.invoke) {\\n                return this.target[removeFnSymbol](this.eventName, delegate.invoke, this.useCapturing);\\n            }\\n            else {\\n                return this.target[removeFnSymbol](this.eventName, delegate, this.useCapturing);\\n            }\\n        }\\n    };\\n};\\nfunction makeZoneAwareAddListener(addFnName, removeFnName, useCapturingParam, allowDuplicates, isPrepend, metaCreator) {\\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\\n    if (allowDuplicates === void 0) { allowDuplicates = false; }\\n    if (isPrepend === void 0) { isPrepend = false; }\\n    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }\\n    var addFnSymbol = zoneSymbol(addFnName);\\n    var removeFnSymbol = zoneSymbol(removeFnName);\\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\\n    function scheduleEventListener(eventTask) {\\n        var meta = eventTask.data;\\n        attachRegisteredEvent(meta.target, eventTask, isPrepend);\\n        return meta.invokeAddFunc(addFnSymbol, eventTask);\\n    }\\n    function cancelEventListener(eventTask) {\\n        var meta = eventTask.data;\\n        findExistingRegisteredTask(meta.target, eventTask.invoke, meta.eventName, meta.useCapturing, true);\\n        return meta.invokeRemoveFunc(removeFnSymbol, eventTask);\\n    }\\n    return function zoneAwareAddListener(self, args) {\\n        var data = metaCreator(self, args);\\n        data.useCapturing = data.useCapturing || defaultUseCapturing;\\n        // - Inside a Web Worker, `this` is undefined, the context is `global`\\n        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\\n        // see https://github.com/angular/zone.js/issues/190\\n        var delegate = null;\\n        if (typeof data.handler == 'function') {\\n            delegate = data.handler;\\n        }\\n        else if (data.handler && data.handler.handleEvent) {\\n            delegate = function (event) { return data.handler.handleEvent(event); };\\n        }\\n        var validZoneHandler = false;\\n        try {\\n            // In cross site contexts (such as WebDriver frameworks like Selenium),\\n            // accessing the handler object here will cause an exception to be thrown which\\n            // will fail tests prematurely.\\n            validZoneHandler = data.handler && data.handler.toString() === '[object FunctionWrapper]';\\n        }\\n        catch (e) {\\n            // Returning nothing here is fine, because objects in a cross-site context are unusable\\n            return;\\n        }\\n        // Ignore special listeners of IE11 & Edge dev tools, see\\n        // https://github.com/angular/zone.js/issues/150\\n        if (!delegate || validZoneHandler) {\\n            return data.invokeAddFunc(addFnSymbol, data.handler);\\n        }\\n        if (!allowDuplicates) {\\n            var eventTask = findExistingRegisteredTask(data.target, data.handler, data.eventName, data.useCapturing, false);\\n            if (eventTask) {\\n                // we already registered, so this will have noop.\\n                return data.invokeAddFunc(addFnSymbol, eventTask);\\n            }\\n        }\\n        var zone = Zone.current;\\n        var source = data.target.constructor['name'] + '.' + addFnName + ':' + data.eventName;\\n        zone.scheduleEventTask(source, delegate, data, scheduleEventListener, cancelEventListener);\\n    };\\n}\\nfunction makeZoneAwareRemoveListener(fnName, useCapturingParam, metaCreator) {\\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\\n    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }\\n    var symbol = zoneSymbol(fnName);\\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\\n    return function zoneAwareRemoveListener(self, args) {\\n        var data = metaCreator(self, args);\\n        data.useCapturing = data.useCapturing || defaultUseCapturing;\\n        // - Inside a Web Worker, `this` is undefined, the context is `global`\\n        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\\n        // see https://github.com/angular/zone.js/issues/190\\n        var eventTask = findExistingRegisteredTask(data.target, data.handler, data.eventName, data.useCapturing, true);\\n        if (eventTask) {\\n            eventTask.zone.cancelTask(eventTask);\\n        }\\n        else {\\n            data.invokeRemoveFunc(symbol, data.handler);\\n        }\\n    };\\n}\\n\\n\\nvar zoneAwareAddEventListener = makeZoneAwareAddListener(ADD_EVENT_LISTENER, REMOVE_EVENT_LISTENER);\\nvar zoneAwareRemoveEventListener = makeZoneAwareRemoveListener(REMOVE_EVENT_LISTENER);\\nfunction patchEventTargetMethods(obj, addFnName, removeFnName, metaCreator) {\\n    if (addFnName === void 0) { addFnName = ADD_EVENT_LISTENER; }\\n    if (removeFnName === void 0) { removeFnName = REMOVE_EVENT_LISTENER; }\\n    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }\\n    if (obj && obj[addFnName]) {\\n        patchMethod(obj, addFnName, function () { return makeZoneAwareAddListener(addFnName, removeFnName, true, false, false, metaCreator); });\\n        patchMethod(obj, removeFnName, function () { return makeZoneAwareRemoveListener(removeFnName, true, metaCreator); });\\n        return true;\\n    }\\n    else {\\n        return false;\\n    }\\n}\\nvar originalInstanceKey = zoneSymbol('originalInstance');\\n// wrap some native API on `window`\\nfunction patchClass(className) {\\n    var OriginalClass = _global$1[className];\\n    if (!OriginalClass)\\n        return;\\n    _global$1[className] = function () {\\n        var a = bindArguments(arguments, className);\\n        switch (a.length) {\\n            case 0:\\n                this[originalInstanceKey] = new OriginalClass();\\n                break;\\n            case 1:\\n                this[originalInstanceKey] = new OriginalClass(a[0]);\\n                break;\\n            case 2:\\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\\n                break;\\n            case 3:\\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\\n                break;\\n            case 4:\\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\\n                break;\\n            default:\\n                throw new Error('Arg list too long.');\\n        }\\n    };\\n    var instance = new OriginalClass(function () { });\\n    var prop;\\n    for (prop in instance) {\\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\\n            continue;\\n        (function (prop) {\\n            if (typeof instance[prop] === 'function') {\\n                _global$1[className].prototype[prop] = function () {\\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\\n                };\\n            }\\n            else {\\n                Object.defineProperty(_global$1[className].prototype, prop, {\\n                    set: function (fn) {\\n                        if (typeof fn === 'function') {\\n                            this[originalInstanceKey][prop] = Zone.current.wrap(fn, className + '.' + prop);\\n                        }\\n                        else {\\n                            this[originalInstanceKey][prop] = fn;\\n                        }\\n                    },\\n                    get: function () {\\n                        return this[originalInstanceKey][prop];\\n                    }\\n                });\\n            }\\n        }(prop));\\n    }\\n    for (prop in OriginalClass) {\\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\\n            _global$1[className][prop] = OriginalClass[prop];\\n        }\\n    }\\n}\\n\\nfunction createNamedFn(name, delegate) {\\n    try {\\n        return (Function('f', \\\"return function \\\" + name + \\\"(){return f(this, arguments)}\\\"))(delegate);\\n    }\\n    catch (e) {\\n        // if we fail, we must be CSP, just return delegate.\\n        return function () {\\n            return delegate(this, arguments);\\n        };\\n    }\\n}\\nfunction patchMethod(target, name, patchFn) {\\n    var proto = target;\\n    while (proto && Object.getOwnPropertyNames(proto).indexOf(name) === -1) {\\n        proto = Object.getPrototypeOf(proto);\\n    }\\n    if (!proto && target[name]) {\\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\\n        proto = target;\\n    }\\n    var delegateName = zoneSymbol(name);\\n    var delegate;\\n    if (proto && !(delegate = proto[delegateName])) {\\n        delegate = proto[delegateName] = proto[name];\\n        proto[name] = createNamedFn(name, patchFn(delegate, delegateName, name));\\n    }\\n    return delegate;\\n}\\n// TODO: support cancel task later if necessary\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\\n    var setNative = null;\\n    var clearNative = null;\\n    setName += nameSuffix;\\n    cancelName += nameSuffix;\\n    var tasksByHandleId = {};\\n    function scheduleTask(task) {\\n        var data = task.data;\\n        data.args[0] = function () {\\n            task.invoke.apply(this, arguments);\\n            delete tasksByHandleId[data.handleId];\\n        };\\n        data.handleId = setNative.apply(window, data.args);\\n        tasksByHandleId[data.handleId] = task;\\n        return task;\\n    }\\n    function clearTask(task) {\\n        delete tasksByHandleId[task.data.handleId];\\n        return clearNative(task.data.handleId);\\n    }\\n    setNative =\\n        patchMethod(window, setName, function (delegate) { return function (self, args) {\\n            if (typeof args[0] === 'function') {\\n                var zone = Zone.current;\\n                var options = {\\n                    handleId: null,\\n                    isPeriodic: nameSuffix === 'Interval',\\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 : null,\\n                    args: args\\n                };\\n                var task = zone.scheduleMacroTask(setName, args[0], options, scheduleTask, clearTask);\\n                if (!task) {\\n                    return task;\\n                }\\n                // Node.js must additionally support the ref and unref functions.\\n                var handle = task.data.handleId;\\n                if (handle.ref && handle.unref) {\\n                    task.ref = handle.ref.bind(handle);\\n                    task.unref = handle.unref.bind(handle);\\n                }\\n                return task;\\n            }\\n            else {\\n                // cause an error by calling it directly.\\n                return delegate.apply(window, args);\\n            }\\n        }; });\\n    clearNative =\\n        patchMethod(window, cancelName, function (delegate) { return function (self, args) {\\n            var task = typeof args[0] === 'number' ? tasksByHandleId[args[0]] : args[0];\\n            if (task && typeof task.type === 'string') {\\n                if (task.cancelFn && task.data.isPeriodic || task.runCount === 0) {\\n                    // Do not cancel already canceled functions\\n                    task.zone.cancelTask(task);\\n                }\\n            }\\n            else {\\n                // cause an error by calling it directly.\\n                delegate.apply(window, args);\\n            }\\n        }; });\\n}\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\n/*\\n * This is necessary for Chrome and Chrome mobile, to enable\\n * things like redefining `createdCallback` on an element.\\n */\\nvar _defineProperty = Object[zoneSymbol('defineProperty')] = Object.defineProperty;\\nvar _getOwnPropertyDescriptor = Object[zoneSymbol('getOwnPropertyDescriptor')] =\\n    Object.getOwnPropertyDescriptor;\\nvar _create = Object.create;\\nvar unconfigurablesKey = zoneSymbol('unconfigurables');\\nfunction propertyPatch() {\\n    Object.defineProperty = function (obj, prop, desc) {\\n        if (isUnconfigurable(obj, prop)) {\\n            throw new TypeError('Cannot assign to read only property \\\\'' + prop + '\\\\' of ' + obj);\\n        }\\n        var originalConfigurableFlag = desc.configurable;\\n        if (prop !== 'prototype') {\\n            desc = rewriteDescriptor(obj, prop, desc);\\n        }\\n        return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\\n    };\\n    Object.defineProperties = function (obj, props) {\\n        Object.keys(props).forEach(function (prop) {\\n            Object.defineProperty(obj, prop, props[prop]);\\n        });\\n        return obj;\\n    };\\n    Object.create = function (obj, proto) {\\n        if (typeof proto === 'object' && !Object.isFrozen(proto)) {\\n            Object.keys(proto).forEach(function (prop) {\\n                proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);\\n            });\\n        }\\n        return _create(obj, proto);\\n    };\\n    Object.getOwnPropertyDescriptor = function (obj, prop) {\\n        var desc = _getOwnPropertyDescriptor(obj, prop);\\n        if (isUnconfigurable(obj, prop)) {\\n            desc.configurable = false;\\n        }\\n        return desc;\\n    };\\n}\\n\\nfunction _redefineProperty(obj, prop, desc) {\\n    var originalConfigurableFlag = desc.configurable;\\n    desc = rewriteDescriptor(obj, prop, desc);\\n    return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\\n}\\n\\nfunction isUnconfigurable(obj, prop) {\\n    return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];\\n}\\nfunction rewriteDescriptor(obj, prop, desc) {\\n    desc.configurable = true;\\n    if (!desc.configurable) {\\n        if (!obj[unconfigurablesKey]) {\\n            _defineProperty(obj, unconfigurablesKey, { writable: true, value: {} });\\n        }\\n        obj[unconfigurablesKey][prop] = true;\\n    }\\n    return desc;\\n}\\nfunction _tryDefineProperty(obj, prop, desc, originalConfigurableFlag) {\\n    try {\\n        return _defineProperty(obj, prop, desc);\\n    }\\n    catch (e) {\\n        if (desc.configurable) {\\n            // In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's\\n            // retry with the original flag value\\n            if (typeof originalConfigurableFlag == 'undefined') {\\n                delete desc.configurable;\\n            }\\n            else {\\n                desc.configurable = originalConfigurableFlag;\\n            }\\n            try {\\n                return _defineProperty(obj, prop, desc);\\n            }\\n            catch (e) {\\n                var descJson = null;\\n                try {\\n                    descJson = JSON.stringify(desc);\\n                }\\n                catch (e) {\\n                    descJson = descJson.toString();\\n                }\\n                console.log(\\\"Attempting to configure '\\\" + prop + \\\"' with descriptor '\\\" + descJson + \\\"' on object '\\\" + obj + \\\"' and got error, giving up: \\\" + e);\\n            }\\n        }\\n        else {\\n            throw e;\\n        }\\n    }\\n}\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\nvar WTF_ISSUE_555 = 'Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video';\\nvar NO_EVENT_TARGET = 'ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Window,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex,WebSocket'\\n    .split(',');\\nvar EVENT_TARGET = 'EventTarget';\\nfunction eventTargetPatch(_global) {\\n    var apis = [];\\n    var isWtf = _global['wtf'];\\n    if (isWtf) {\\n        // Workaround for: https://github.com/google/tracing-framework/issues/555\\n        apis = WTF_ISSUE_555.split(',').map(function (v) { return 'HTML' + v + 'Element'; }).concat(NO_EVENT_TARGET);\\n    }\\n    else if (_global[EVENT_TARGET]) {\\n        apis.push(EVENT_TARGET);\\n    }\\n    else {\\n        // Note: EventTarget is not available in all browsers,\\n        // if it's not available, we instead patch the APIs in the IDL that inherit from EventTarget\\n        apis = NO_EVENT_TARGET;\\n    }\\n    for (var i = 0; i < apis.length; i++) {\\n        var type = _global[apis[i]];\\n        patchEventTargetMethods(type && type.prototype);\\n    }\\n}\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\n// we have to patch the instance since the proto is non-configurable\\nfunction apply(_global) {\\n    var WS = _global.WebSocket;\\n    // On Safari window.EventTarget doesn't exist so need to patch WS add/removeEventListener\\n    // On older Chrome, no need since EventTarget was already patched\\n    if (!_global.EventTarget) {\\n        patchEventTargetMethods(WS.prototype);\\n    }\\n    _global.WebSocket = function (a, b) {\\n        var socket = arguments.length > 1 ? new WS(a, b) : new WS(a);\\n        var proxySocket;\\n        // Safari 7.0 has non-configurable own 'onmessage' and friends properties on the socket instance\\n        var onmessageDesc = Object.getOwnPropertyDescriptor(socket, 'onmessage');\\n        if (onmessageDesc && onmessageDesc.configurable === false) {\\n            proxySocket = Object.create(socket);\\n            ['addEventListener', 'removeEventListener', 'send', 'close'].forEach(function (propName) {\\n                proxySocket[propName] = function () {\\n                    return socket[propName].apply(socket, arguments);\\n                };\\n            });\\n        }\\n        else {\\n            // we can patch the real socket\\n            proxySocket = socket;\\n        }\\n        patchOnProperties(proxySocket, ['close', 'error', 'message', 'open']);\\n        return proxySocket;\\n    };\\n    for (var prop in WS) {\\n        _global.WebSocket[prop] = WS[prop];\\n    }\\n}\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\nvar eventNames = 'copy cut paste abort blur focus canplay canplaythrough change click contextmenu dblclick drag dragend dragenter dragleave dragover dragstart drop durationchange emptied ended input invalid keydown keypress keyup load loadeddata loadedmetadata loadstart message mousedown mouseenter mouseleave mousemove mouseout mouseover mouseup pause play playing progress ratechange reset scroll seeked seeking select show stalled submit suspend timeupdate volumechange waiting mozfullscreenchange mozfullscreenerror mozpointerlockchange mozpointerlockerror error webglcontextrestored webglcontextlost webglcontextcreationerror'\\n    .split(' ');\\nfunction propertyDescriptorPatch(_global) {\\n    if (isNode) {\\n        return;\\n    }\\n    var supportsWebSocket = typeof WebSocket !== 'undefined';\\n    if (canPatchViaPropertyDescriptor()) {\\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\\n        if (isBrowser) {\\n            patchOnProperties(HTMLElement.prototype, eventNames);\\n        }\\n        patchOnProperties(XMLHttpRequest.prototype, null);\\n        if (typeof IDBIndex !== 'undefined') {\\n            patchOnProperties(IDBIndex.prototype, null);\\n            patchOnProperties(IDBRequest.prototype, null);\\n            patchOnProperties(IDBOpenDBRequest.prototype, null);\\n            patchOnProperties(IDBDatabase.prototype, null);\\n            patchOnProperties(IDBTransaction.prototype, null);\\n            patchOnProperties(IDBCursor.prototype, null);\\n        }\\n        if (supportsWebSocket) {\\n            patchOnProperties(WebSocket.prototype, null);\\n        }\\n    }\\n    else {\\n        // Safari, Android browsers (Jelly Bean)\\n        patchViaCapturingAllTheEvents();\\n        patchClass('XMLHttpRequest');\\n        if (supportsWebSocket) {\\n            apply(_global);\\n        }\\n    }\\n}\\nfunction canPatchViaPropertyDescriptor() {\\n    if (isBrowser && !Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'onclick') &&\\n        typeof Element !== 'undefined') {\\n        // WebKit https://bugs.webkit.org/show_bug.cgi?id=134364\\n        // IDL interface attributes are not configurable\\n        var desc = Object.getOwnPropertyDescriptor(Element.prototype, 'onclick');\\n        if (desc && !desc.configurable)\\n            return false;\\n    }\\n    var xhrDesc = Object.getOwnPropertyDescriptor(XMLHttpRequest.prototype, 'onreadystatechange');\\n    // add enumerable and configurable here because in opera\\n    // by default XMLHttpRequest.prototype.onreadystatechange is undefined\\n    // without adding enumerable and configurable will cause onreadystatechange\\n    // non-configurable\\n    Object.defineProperty(XMLHttpRequest.prototype, 'onreadystatechange', {\\n        enumerable: true,\\n        configurable: true,\\n        get: function () {\\n            return true;\\n        }\\n    });\\n    var req = new XMLHttpRequest();\\n    var result = !!req.onreadystatechange;\\n    // restore original desc\\n    Object.defineProperty(XMLHttpRequest.prototype, 'onreadystatechange', xhrDesc || {});\\n    return result;\\n}\\n\\nvar unboundKey = zoneSymbol('unbound');\\n// Whenever any eventListener fires, we check the eventListener target and all parents\\n// for `onwhatever` properties and replace them with zone-bound functions\\n// - Chrome (for now)\\nfunction patchViaCapturingAllTheEvents() {\\n    var _loop_1 = function (i) {\\n        var property = eventNames[i];\\n        var onproperty = 'on' + property;\\n        self.addEventListener(property, function (event) {\\n            var elt = event.target, bound, source;\\n            if (elt) {\\n                source = elt.constructor['name'] + '.' + onproperty;\\n            }\\n            else {\\n                source = 'unknown.' + onproperty;\\n            }\\n            while (elt) {\\n                if (elt[onproperty] && !elt[onproperty][unboundKey]) {\\n                    bound = Zone.current.wrap(elt[onproperty], source);\\n                    bound[unboundKey] = elt[onproperty];\\n                    elt[onproperty] = bound;\\n                }\\n                elt = elt.parentElement;\\n            }\\n        }, true);\\n    };\\n    for (var i = 0; i < eventNames.length; i++) {\\n        _loop_1(i);\\n    }\\n    \\n}\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\nfunction registerElementPatch(_global) {\\n    if (!isBrowser || !('registerElement' in _global.document)) {\\n        return;\\n    }\\n    var _registerElement = document.registerElement;\\n    var callbacks = ['createdCallback', 'attachedCallback', 'detachedCallback', 'attributeChangedCallback'];\\n    document.registerElement = function (name, opts) {\\n        if (opts && opts.prototype) {\\n            callbacks.forEach(function (callback) {\\n                var source = 'Document.registerElement::' + callback;\\n                if (opts.prototype.hasOwnProperty(callback)) {\\n                    var descriptor = Object.getOwnPropertyDescriptor(opts.prototype, callback);\\n                    if (descriptor && descriptor.value) {\\n                        descriptor.value = Zone.current.wrap(descriptor.value, source);\\n                        _redefineProperty(opts.prototype, callback, descriptor);\\n                    }\\n                    else {\\n                        opts.prototype[callback] = Zone.current.wrap(opts.prototype[callback], source);\\n                    }\\n                }\\n                else if (opts.prototype[callback]) {\\n                    opts.prototype[callback] = Zone.current.wrap(opts.prototype[callback], source);\\n                }\\n            });\\n        }\\n        return _registerElement.apply(document, [name, opts]);\\n    };\\n}\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\nvar set = 'set';\\nvar clear = 'clear';\\nvar blockingMethods = ['alert', 'prompt', 'confirm'];\\nvar _global = typeof window === 'object' && window || typeof self === 'object' && self || global;\\npatchTimer(_global, set, clear, 'Timeout');\\npatchTimer(_global, set, clear, 'Interval');\\npatchTimer(_global, set, clear, 'Immediate');\\npatchTimer(_global, 'request', 'cancel', 'AnimationFrame');\\npatchTimer(_global, 'mozRequest', 'mozCancel', 'AnimationFrame');\\npatchTimer(_global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\\nfor (var i = 0; i < blockingMethods.length; i++) {\\n    var name_1 = blockingMethods[i];\\n    patchMethod(_global, name_1, function (delegate, symbol, name) {\\n        return function (s, args) {\\n            return Zone.current.run(delegate, _global, args, name);\\n        };\\n    });\\n}\\neventTargetPatch(_global);\\npropertyDescriptorPatch(_global);\\npatchClass('MutationObserver');\\npatchClass('WebKitMutationObserver');\\npatchClass('FileReader');\\npropertyPatch();\\nregisterElementPatch(_global);\\n// Treat XMLHTTPRequest as a macrotask.\\npatchXHR(_global);\\nvar XHR_TASK = zoneSymbol('xhrTask');\\nvar XHR_SYNC = zoneSymbol('xhrSync');\\nvar XHR_LISTENER = zoneSymbol('xhrListener');\\nvar XHR_SCHEDULED = zoneSymbol('xhrScheduled');\\nfunction patchXHR(window) {\\n    function findPendingTask(target) {\\n        var pendingTask = target[XHR_TASK];\\n        return pendingTask;\\n    }\\n    function scheduleTask(task) {\\n        self[XHR_SCHEDULED] = false;\\n        var data = task.data;\\n        // remove existing event listener\\n        var listener = data.target[XHR_LISTENER];\\n        if (listener) {\\n            data.target.removeEventListener('readystatechange', listener);\\n        }\\n        var newListener = data.target[XHR_LISTENER] = function () {\\n            if (data.target.readyState === data.target.DONE) {\\n                if (!data.aborted && self[XHR_SCHEDULED]) {\\n                    task.invoke();\\n                }\\n            }\\n        };\\n        data.target.addEventListener('readystatechange', newListener);\\n        var storedTask = data.target[XHR_TASK];\\n        if (!storedTask) {\\n            data.target[XHR_TASK] = task;\\n        }\\n        sendNative.apply(data.target, data.args);\\n        self[XHR_SCHEDULED] = true;\\n        return task;\\n    }\\n    function placeholderCallback() { }\\n    function clearTask(task) {\\n        var data = task.data;\\n        // Note - ideally, we would call data.target.removeEventListener here, but it's too late\\n        // to prevent it from firing. So instead, we store info for the event listener.\\n        data.aborted = true;\\n        return abortNative.apply(data.target, data.args);\\n    }\\n    var openNative = patchMethod(window.XMLHttpRequest.prototype, 'open', function () { return function (self, args) {\\n        self[XHR_SYNC] = args[2] == false;\\n        return openNative.apply(self, args);\\n    }; });\\n    var sendNative = patchMethod(window.XMLHttpRequest.prototype, 'send', function () { return function (self, args) {\\n        var zone = Zone.current;\\n        if (self[XHR_SYNC]) {\\n            // if the XHR is sync there is no task to schedule, just execute the code.\\n            return sendNative.apply(self, args);\\n        }\\n        else {\\n            var options = { target: self, isPeriodic: false, delay: null, args: args, aborted: false };\\n            return zone.scheduleMacroTask('XMLHttpRequest.send', placeholderCallback, options, scheduleTask, clearTask);\\n        }\\n    }; });\\n    var abortNative = patchMethod(window.XMLHttpRequest.prototype, 'abort', function (delegate) { return function (self, args) {\\n        var task = findPendingTask(self);\\n        if (task && typeof task.type == 'string') {\\n            // If the XHR has already completed, do nothing.\\n            // If the XHR has already been aborted, do nothing.\\n            // Fix #569, call abort multiple times before done will cause\\n            // macroTask task count be negative number\\n            if (task.cancelFn == null || (task.data && task.data.aborted)) {\\n                return;\\n            }\\n            task.zone.cancelTask(task);\\n        }\\n        // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no task\\n        // to cancel. Do nothing.\\n    }; });\\n}\\n/// GEO_LOCATION\\nif (_global['navigator'] && _global['navigator'].geolocation) {\\n    patchPrototype(_global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\\n}\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\n\\n})));\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/zone.js/dist/zone.js\n// module id = 191\n// module chunks = 2 3","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader/addScript.js\n// module id = 92\n// module chunks = 2 3","require(\"!!/www/sites/videogular2-starter/node_modules/script-loader/addScript.js\")(require(\"!!/www/sites/videogular2-starter/node_modules/raw-loader/index.js!/www/sites/videogular2-starter/node_modules/zone.js/dist/zone.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zone.js/dist/zone.js\n// module id = 93\n// module chunks = 2 3"],"sourceRoot":""}